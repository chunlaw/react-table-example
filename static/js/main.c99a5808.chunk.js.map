{"version":3,"sources":["Page/index.tsx","utils/makeData.ts","utils/object.ts","Table/FilterChipBar.tsx","Table/filters/fuzzyFilter.tsx","Table/filters/numericFilter.tsx","Table/TableStyles.tsx","Table/ResizeHandle.tsx","Loader/index.tsx","Table/TableDebug.tsx","Table/TablePagination.tsx","Table/ColumnHidePage.tsx","Table/FilterPage.tsx","Table/TableToolbar.tsx","Table/TooltipCell.tsx","Table/Table.tsx","utils/useLocalStorage.tsx","utils/useDebounce.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","main","background","position","zIndex","margin","borderRadius","boxShadow","padding","spacing","Page","children","className","classes","classNames","range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","saltLength","lastName","subset","age","floor","visits","progress","status","camelToWords","str","code","newKey","index","wasPrevNumber","wasPrevUppercase","length","charCodeAt","toUpperCase","toLowerCase","filtersActiveLabel","color","fontSize","paddingRight","chipZone","width","chipLabel","fontWeight","marginRight","filterChip","getFilterValue","column","filterValue","filter","min","max","FilterChipBar","instance","allColumns","setFilter","filters","state","handleDelete","useCallback","id","undefined","Object","keys","map","find","f","value","Chip","label","render","onDelete","variant","fuzzyTextFilter","rows","matchSorter","row","values","autoRemove","val","regex","numericTextFilter","comparator","defaultComparator","tokens","exec","parseFloat","parseValue","tableTable","borderSpacing","border","tableHead","tableHeadRow","backgroundColor","palette","paper","text","primary","borderBottom","opacity","tableHeadCell","textAlign","verticalAlign","lineHeight","borderRight","tableBody","tableRow","outline","cursor","tableLabel","tableCell","resizeHandle","borderLeft","light","height","top","transition","right","tableSortLabel","marginTop","marginLeft","headerIcon","iconDirectionAsc","transform","iconDirectionDesc","cellIcon","areEqual","prevProps","nextProps","checked","indeterminate","TableTable","rest","cx","TableBody","TableHead","TableHeadRow","TableHeadCell","TableRow","TableCell","TableLabel","HeaderCheckbox","React","memo","styled","Checkbox","RowCheckbox","ResizeHandle","getResizerProps","style","isResizing","root","display","flexDirection","justifyContent","alignContent","alignItems","flex","Loader","error","retry","timedOut","pastDelay","onClick","CircularProgress","ReactJson","lazy","button","TableDebug","enabled","useState","open","setOpen","Tooltip","title","IconButton","classnames","old","fallback","src","collapsed","indentWidth","sortKeys","rowsPerPageOptions","interestingPropsEqual","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","MuiTablePagination","_MuiTablePagination","flexShrink","TablePaginationActions","props","useTheme","event","disabled","aria-label","direction","ceil","TablePagination","pageIndex","pageSize","rowCount","gotoPage","nextPage","previousPage","setPageSize","handleChangePage","newPage","e","Number","target","component","SelectProps","inputProps","ActionsComponent","columnsPopOver","popoverTitle","textTransform","grid","gridTemplateColumns","gridColumnGap","gridRowGap","ColumnHidePage","anchorEl","onClose","show","toggleHideColumn","hideableColumns","onlyOneOptionLeft","reduce","acc","isVisible","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Typography","FormControlLabel","control","onChange","filtersResetButton","cell","hidden","FilterPage","setAllFilters","onSubmit","preventDefault","resetFilters","Button","it","canFilter","type","toolbar","leftButtons","rightButtons","leftIcons","rightIcons","InstanceSmallIconActionButton","icon","SmallIconActionButton","TableToolbar","onAdd","onEdit","columns","setAnchorEl","columnsOpen","setColumnsOpen","filterOpen","setFilterOpen","handleColumnsClick","currentTarget","handleFilterClick","handleClose","Toolbar","selectedRowIds","truncated","textOverflow","overflow","whiteSpace","TooltipCell","tooltip","align","findFirstColumn","getStyles","headerProps","disableResizing","cellProps","defaultColumn","Filter","setValue","useEffect","isFirstColumn","TextField","name","InputLabelProps","htmlFor","autoFocus","onBlur","Cell","Header","startsWith","minWidth","maxWidth","hooks","useColumnOrder","useFilters","useGroupBy","useSortBy","useExpanded","useFlexLayout","usePagination","useResizeColumns","useRowSelect","disableGroupBy","Aggregated","getToggleAllRowsSelectedProps","getToggleRowSelectedProps","useInstanceBeforeDimensions","headerGroups","headers","canResize","filterTypes","fuzzyText","numeric","Table","key","initialValue","item","window","localStorage","getItem","JSON","parse","console","log","storedValue","setStoredValue","setItem","stringify","useLocalStorage","initialState","setInitialState","useTable","getTableProps","getTableBodyProps","prepareRow","debouncedState","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","sortBy","columnResizing","hiddenColumns","cellClickHandler","isGrouped","tableProps","role","headerGroup","getHeaderGroupProps","headerGroupKey","getHeaderProps","headerKey","getGroupByToggleProps","groupTitle","columnGroupByProps","getSortByToggleProps","sortTitle","columnSortByProps","canGroupBy","TableSortLabel","active","IconComponent","KeyboardArrowRight","canSort","isSorted","isSortedDesc","getRowProps","rowKey","rowSelected","isSelected","clickable","cells","getCellProps","cellKey","isExpanded","KeyboardArrowUp","getToggleRowExpandedProps","editable","subRows","isAggregated","isPlaceholder","filterGreaterThan","getMinMax","forEach","SliderColumnFilter","preFilteredRows","useMemo","parseInt","accessor","aggregate","defaultCanSort","disableSortBy","focusedElement","document","activeElement","setActive","handleFocusIn","addEventListener","removeEventListener","useActiveElement","hasFocus","InputLabel","shrink","focused","paddingTop","placeholder","options","Set","add","Array","from","select","MenuItem","option","round","App","lens","makeDataLevel","depth","makeData","data","dummy","selectedFlatRows","v","original","join","CssBaseline","ReactDOM","StrictMode","getElementById"],"mappings":"6RAMMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,IAAa,CACXC,KAAM,CACJC,WAAY,UACZC,SAAU,WACVC,OAAQ,EACRC,OAAQ,gBACRC,aAAc,MACdC,UACE,8GACFC,QAAST,EAAMU,QAAQ,SAShBC,EAA4B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC9CC,EAAUhB,IAChB,OAAO,qBAAKe,UAAWE,IAAWD,EAAQZ,KAAMW,GAAzC,SAAsDD,K,6FChBzDI,EAAQ,SAACC,GAEb,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAIE,KAAKD,GAEX,OAAOD,GAGHG,EAAY,WAChB,IAAMC,EAAeC,KAAKC,SAC1B,MAAO,CACLC,UAAWC,IAAMC,SAAS,CAAEC,MAAO,EAAGC,WAAY,IAClDC,SAAUJ,IAAMC,SAAS,CAAEC,MAAO,EAAGC,WAAY,EAAGE,OAAQ,UAC5DC,IAAKT,KAAKU,MAAsB,GAAhBV,KAAKC,UACrBU,OAAQX,KAAKU,MAAsB,IAAhBV,KAAKC,UACxBW,SAAUZ,KAAKU,MAAsB,IAAhBV,KAAKC,UAC1BY,OAAQd,EAAe,IAAO,eAAiBA,EAAe,IAAO,cAAgB,WCiClF,SAASe,EAAaC,GAO3B,IANA,IAEIC,EAFAC,EAAS,GACTC,EAAQ,EAERC,GAAgB,EAChBC,GAAmB,EAEhBF,EAAQH,EAAIM,QACjBL,EAAOD,EAAIO,WAAWJ,GACR,IAAVA,EACFD,GAAUF,EAAIG,GAAOK,eACVH,GAAoBJ,GAAQ,IAAMA,GAAQ,KAASG,GAAiBH,GAAQ,IAAMA,GAAQ,IACrGC,GAAU,IACVA,GAAUF,EAAIG,GAAOK,eAErBN,GAAUF,EAAIG,GAAOM,cAEvBL,EAAgBH,GAAQ,IAAMA,GAAQ,GACtCI,EAAmBJ,GAAQ,IAAMA,GAAQ,GACzCE,IAGF,OAAOD,E,sBC9EH1C,EAAYC,YAChBE,YAAa,CACX+C,mBAAoB,CAClBC,MAAO,OACPC,SAAU,OACVC,aAAc,IAEhBC,SAAU,CACR3C,QAAS,kBACT4C,MAAO,QAETC,UAAW,CACTC,WAAY,IACZC,YAAa,GAEfC,WAAY,CACVD,YAAa,EACbP,MAAO,WASPS,EAAiB,SAACC,EAA6BC,GACnD,OAAQD,EAAOE,QACb,IAAK,UACH,IAAMC,EAAMF,EAAY,GAClBG,EAAMH,EAAY,GACxB,OAAOE,EAAOC,EAAG,UAAMD,EAAN,YAAaC,GAAb,YAA0BD,GAAjC,YAA+CC,GAE7D,OAAOH,GAGF,SAASI,EAAT,GAEyC,IAD9CC,EAC6C,EAD7CA,SAEMnD,EAAUhB,EAAU,IAExBoE,EAGED,EAHFC,WACAC,EAEEF,EAFFE,UACSC,EACPH,EADFI,MAASD,QAELE,EAAeC,uBACnB,SAACC,GACCL,EAAUK,OAAiBC,KAE7B,CAACN,IAGH,OAAOO,OAAOC,KAAKP,GAASxB,OAAS,EACnC,sBAAK/B,UAAWC,EAAQsC,SAAxB,UACE,sBAAMvC,UAAWC,EAAQkC,mBAAzB,6BACCoB,GACCF,EAAWU,KAAI,SAACjB,GACd,IAAME,EAASO,EAAQS,MAAK,SAACC,GAAD,OAAOA,EAAEN,KAAOb,EAAOa,MAC7CO,EAAQlB,GAAUA,EAAOkB,MAC/B,OACEA,GACE,cAACC,EAAA,EAAD,CACEnE,UAAWC,EAAQ2C,WAEnBwB,MACE,qCACE,uBAAMpE,UAAWC,EAAQwC,UAAzB,UAAqCK,EAAOuB,OAAO,UAAnD,QACCxB,EAAeC,EAAQoB,MAG5BI,SAAU,kBAAMb,EAAaX,EAAOa,KACpCY,QAAQ,YARHzB,EAAOa,UActB,K,aC9EC,SAASa,EACdC,EACAd,EACAZ,GAEA,OAAO2B,YAAYD,EAAM1B,EAAa,CACpCe,KAAM,CAAC,SAACa,GAAD,OAAiBA,EAAIC,OAAOjB,OAKvCa,EAAgBK,WAAa,SAACC,GAAD,OAAeA,GCZ5C,IAAMC,EAAQ,mCA0BP,SAASC,EACdP,EACAd,EACAZ,GAEA,IAAMkC,EA7BR,SAAoBlC,GAElB,IAAMmC,EAAoB,SAACJ,GAAD,OAAcA,GAAO/B,GACzCoC,EAASJ,EAAMK,KAAKrC,GAC1B,IAAKoC,EACH,OAAOD,EAET,OAAQC,EAAO,IACb,IAAK,IACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,GAAOO,WAAWF,EAAO,KAC3D,IAAK,IACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,GAAOO,WAAWF,EAAO,KAC3D,IAAK,KACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,IAAQO,WAAWF,EAAO,KAC5D,IAAK,KACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,IAAQO,WAAWF,EAAO,KAC5D,IAAK,IACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,KAASO,WAAWF,EAAO,KAC7D,IAAK,IACH,OAAO,SAACL,GAAD,OAAcO,WAAWP,KAASO,WAAWF,EAAO,KAE/D,OAAOD,EAQYI,CAAWvC,GAC9B,OAAO0B,EAAKzB,QAAO,SAAC2B,GAAD,OAASM,EAAWN,EAAIC,OAAOjB,EAAG,QAIvDqB,EAAkBH,WAAa,SAACC,GAAD,OAAeA,G,2ECxBjC7F,EAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXmG,WAAY,CACVC,cAAe,EACfC,OAAQ,mCACRjD,MAAO,QAETkD,UAAW,GACXC,aAAc,CACZC,gBAAiBzG,EAAM0G,QAAQvG,WAAWwG,MAC1C1D,MAAOjD,EAAM0G,QAAQE,KAAKC,QAC1BC,aAAc,mCACd,wBAAyB,CACvBC,QAAS,IAGbC,cAAe,CACbvG,QAAS,qBACTyC,SAAU,WACV+D,UAAW,OACXC,cAAe,UACfjE,MAAOjD,EAAM0G,QAAQE,KAAKC,QAC1BtD,WAAY,IACZ4D,WAAY,SACZC,YAAa,mCACb,eAAgB,CACdA,YAAa,SAGjBC,UAAW,GACXC,SAAU,CACRrE,MAAO,UACPsE,QAAS,EACTL,cAAe,SACf,UAAW,CACTT,gBAAiB,uBAEnBK,aAAc,mCACd,eAAgB,CACdA,aAAc,QAEhB,gBAAiB,CACfL,gBAAiB,sBACjB,UAAW,CACTA,gBAAiB,wBAGrB,cAAe,CACbe,OAAQ,YAGZC,WAAY,GACZC,UAAW,CACTjH,QAAS,WACTyC,SAAU,WACV+D,UAAW,OACX1D,WAAY,IACZ4D,WAAY,IACZD,cAAe,UACfjE,MAAOjD,EAAM0G,QAAQE,KAAKC,QAC1BO,YAAa,mCACb,eAAgB,CACdA,YAAa,SAGjBO,aAAc,CACZvH,SAAU,WACVoH,OAAQ,aACRnH,OAAQ,IACR0G,QAAS,EACTa,WAAW,aAAD,OAAe5H,EAAM0G,QAAQG,QAAQgB,OAC/CT,YAAY,aAAD,OAAepH,EAAM0G,QAAQG,QAAQgB,OAChDC,OAAQ,MACRC,IAAK,MACLC,WAAY,mBACZC,OAAQ,EACR5E,MAAO,EACP,iBAAkB,CAChB0D,QAAS,EACTT,OAAQ,OACRG,gBAAiBzG,EAAM0G,QAAQG,QAAQgB,MACvCC,OAAQ,mBACRC,IAAK,MACLE,OAAQ,EACR5E,MAAO,IAGX6E,eAAgB,CACd,QAAS,CACP7E,MAAO,GACPyE,OAAQ,GACRK,UAAW,EACXC,WAAY,IAGhBC,WAAY,CACV,QAAS,CACPhF,MAAO,GACPyE,OAAQ,GACRK,UAAW,EACX3E,YAAa,IAGjB8E,iBAAkB,CAChBC,UAAW,iBAEbC,kBAAmB,CACjBD,UAAW,kBAEbE,SAAU,CACR,QAAS,CACPpF,MAAO,GACPyE,OAAQ,GACRK,UAAW,SAMbO,GAAW,SAACC,EAAgBC,GAAjB,OACfD,EAAUE,UAAYD,EAAUC,SAAWF,EAAUG,gBAAkBF,EAAUE,eAItEC,GAAmD,SAAC,GAAsC,IAApCnI,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCAC9FlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAee,UAAWoI,IAAGpI,EAAWC,EAAQsF,aAAiB4C,GAAjE,aACGpI,MAKMsI,GAAsD,SAAC,GAAsC,IAApCtI,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCACjGlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAce,UAAWoI,IAAGpI,EAAWC,EAAQuG,YAAgB2B,GAA/D,aACGpI,MAKMuI,GAAsD,SAAC,GAAsC,IAApCvI,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCACjGlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAce,UAAWoI,IAAGpI,EAAWC,EAAQyF,YAAgByC,GAA/D,aACGpI,MAKMwI,GAAwD,SAAC,GAAsC,IAApCxI,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCACnGlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAae,UAAWoI,IAAGpI,EAAWC,EAAQ0F,eAAmBwC,GAAjE,aACGpI,MAKMyI,GAAwD,SAAC,GAAsC,IAApCzI,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCACnGlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAce,UAAWoI,IAAGpI,EAAWC,EAAQkG,gBAAoBgC,GAAnE,aACGpI,MAKM0I,GAAoD,SAAC,GAAsC,IAApC1I,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCAC/FlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAae,UAAWoI,IAAGpI,EAAWC,EAAQwG,WAAe0B,GAA7D,aACGpI,MAKM2I,GAAoD,SAAC,GAAsC,IAApC3I,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCAC/FlI,EAAUhB,IAChB,OACE,cAAC,IAAD,yBAAce,UAAWoI,IAAGpI,EAAWC,EAAQ4G,YAAgBsB,GAA/D,aACGpI,MAKM4I,GAA2B,SAAC,GAAsC,IAApC5I,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAcmI,EAAW,wCACtElI,EAAUhB,IAChB,OACE,6CAAKe,UAAWoI,IAAGpI,EAAWC,EAAQ2G,aAAiBuB,GAAvD,aACGpI,MAKM6I,GAAiBC,IAAMC,KAClCC,YAAOC,IAAPD,CAAiB,CACf1G,SAAU,OACV5C,OAAQ,oBACRG,QAAS,UACT,QAAS,CACP4C,MAAO,OACPyE,OAAQ,QAEV,UAAW,CACTrB,gBAAiB,iBAGrBiC,IAGWoB,GAAcJ,IAAMC,KAC/BC,YAAOC,IAAPD,CAAiB,CACf1G,SAAU,OACV5C,OAAQ,oBACRG,QAAS,UACT,UAAW,CACTgG,gBAAiB,eAEnB,QAAS,CACPpD,MAAO,GACPyE,OAAQ,MAGZY,ICzOWqB,GAAe,YAIP,IAAD,EAHlBpG,EAGkB,EAHlBA,OAIM7C,EAAUhB,IAChB,OACE,+CACM6D,EAAOqG,mBADb,IAEEC,MAAO,CAAEzC,OAAQ,cACjB3G,UAAWoI,KAAE,mBACVnI,EAAQ6G,cAAe,GADb,6BAEGhE,EAAOuG,YAFV,Q,yCCXbpK,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkK,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,aAAc,SACdC,WAAY,SACZC,KAAM,YAERtI,SAAU,CACR7B,OAAQN,EAAMU,QAAQ,SAYfgK,GAAgC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAChEhK,EAAUhB,KAChB,OACE,sBAAKe,UAAWC,EAAQqJ,KAAxB,UACGQ,GACC,0CACS,wBAAQI,QAASH,EAAjB,sBAGVC,GACC,yDACwB,wBAAQE,QAASH,EAAjB,sBAGzBE,GAAa,6CACd,cAACE,GAAA,EAAD,CAAkBnK,UAAWC,EAAQqB,eCpCrC8I,GAAYvB,IAAMwB,MAAK,kBAAM,qCAE7BpL,GAAYC,YAChBE,YAAa,CACXkL,OAAQ,CACNhD,WAAY,GACZC,WAAY,MAKLgD,GAGR,SAAC,GAA2B,IAAD,EAAxBC,EAAwB,EAAxBA,QAASpH,EAAe,EAAfA,SACf,EAAwBqH,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACM1K,EAAUhB,KAEhB,OAAOuL,EACL,qCACE,cAACI,EAAA,EAAD,CAASC,MAAO,QAAhB,SACE,+BACE,cAACC,GAAA,EAAD,CACE9K,UAAW+K,IAAW,eAAG9K,EAAQqK,OAAZ,OAAqBlH,QAArB,IAAqBA,GAArB,UAAqBA,EAAUqB,YAA/B,aAAqB,EAAgB1C,SAC1DmI,QAAS,kBAAMS,GAAQ,SAACK,GAAD,OAAUA,MAFnC,SAIE,cAAC,KAAD,UAILN,GACC,qCACE,uBACA,uBACA,cAAC,WAAD,CAAUO,SAAU,cAAC,GAAD,IAApB,SACE,cAACb,GAAD,CAAWc,IAAG,eAAO9H,GAAY+H,UAAW,EAAGC,YAAa,EAAGC,UAAQ,YAK7E,M,+ECrCAC,GAAqB,CAAC,GAAI,GAAI,IAG9BC,GAAwB,SAACzD,EAAgBC,GAAjB,OAC5BD,EAAU0D,QAAUzD,EAAUyD,OAC9B1D,EAAU2D,cAAgB1D,EAAU0D,aACpC3D,EAAU4D,OAAS3D,EAAU2D,MAC7B5D,EAAU6D,eAAiB5D,EAAU4D,cACrC7D,EAAU8D,sBAAwB7D,EAAU6D,qBAIxCC,GAAwBhD,IAAMC,KAAKgD,KAAqBP,IAExDtM,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkK,KAAM,CACJyC,WAAY,EACZxE,WAAYpI,EAAMU,QAAQ,WAYhC,SAASmM,GAAuBC,GAC9B,IAAMhM,EAAUhB,KACVE,EAAQ+M,eACNV,EAA2CS,EAA3CT,MAAOE,EAAoCO,EAApCP,KAAMD,EAA8BQ,EAA9BR,YAAaE,EAAiBM,EAAjBN,aAkBlC,OACE,sBAAK3L,UAAWC,EAAQqJ,KAAxB,UACE,cAACwB,GAAA,EAAD,CAAYZ,QAlBmB,SAACiC,GAClCR,EAAaQ,EAAO,IAiB+BC,SAAmB,IAATV,EAAYW,aAAW,aAAlF,SACuB,QAApBlN,EAAMmN,UAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,MAElD,cAACxB,GAAA,EAAD,CAAYZ,QAjBc,SAACiC,GAC7BR,EAAaQ,EAAOT,EAAO,IAgBmBU,SAAmB,IAATV,EAAYW,aAAW,gBAA7E,SACuB,QAApBlN,EAAMmN,UAAsB,cAAC,IAAD,IAAyB,cAAC,KAAD,MAExD,cAACxB,GAAA,EAAD,CACEZ,QAjBwB,SAACiC,GAC7BR,EAAaQ,EAAOT,EAAO,IAiBvBU,SAAUV,GAAQhL,KAAK6L,KAAKf,EAAQC,GAAe,EACnDY,aAAW,YAHb,SAKuB,QAApBlN,EAAMmN,UAAsB,cAAC,KAAD,IAAwB,cAAC,IAAD,MAEvD,cAACxB,GAAA,EAAD,CACEZ,QApB4B,SAACiC,GACjCR,EAAaQ,EAAOzL,KAAKwC,IAAI,EAAGxC,KAAK6L,KAAKf,EAAQC,GAAe,KAoB7DW,SAAUV,GAAQhL,KAAK6L,KAAKf,EAAQC,GAAe,EACnDY,aAAW,YAHb,SAKuB,QAApBlN,EAAMmN,UAAsB,cAAC,KAAD,IAAoB,cAAC,KAAD,SAMlD,SAASE,GAAT,GAEqE,IAD1EpJ,EACyE,EADzEA,SAEA,EAMIA,EALFI,MAASiJ,EADX,EACWA,UAAWC,EADtB,EACsBA,SADtB,IACgCC,gBADhC,MAC2CvJ,EAASqB,KAAK1C,OADzD,EAEE6K,EAIExJ,EAJFwJ,SACAC,EAGEzJ,EAHFyJ,SACAC,EAEE1J,EAFF0J,aACAC,EACE3J,EADF2J,YAGIC,EAAmBtJ,uBACvB,SAACyI,EAA+Dc,GAC1DA,IAAYR,EAAY,EAC1BI,IACSI,IAAYR,EAAY,EACjCK,IAEAF,EAASK,KAGb,CAACL,EAAUC,EAAUJ,EAAWK,IAG5BlB,EAAsBlI,uBAC1B,SAACwJ,GACCH,EAAYI,OAAOD,EAAEE,OAAOlJ,UAE9B,CAAC6I,IAGH,OAAOJ,EACL,cAACd,GAAD,CACEP,mBAAoBA,GACpB+B,UAAU,MACV7B,MAAOmB,EACPlB,YAAaiB,EACbhB,KAAMe,EACNa,YAAa,CACXC,WAAY,CAAE,aAAc,kBAG9B5B,aAAcqB,EACdpB,oBAAqBA,EACrB4B,iBAAkBxB,KAElB,K,qJCjIA/M,GAAYC,YAChBE,YAAa,CACXqO,eAAgB,CACd7N,QAAS,IAEX8N,aAAc,CACZhL,WAAY,IACZ9C,QAAS,gBACT+N,cAAe,aAEjBC,KAAM,CACJrE,QAAS,OACTsE,oBAAqB,mBACrB,4BAA6B,CAC3BA,oBAAqB,oBAEvBC,cAAe,EACfC,WAAY,MAcX,SAASC,GAAT,GAK0C,IAJ/C5K,EAI8C,EAJ9CA,SACA6K,EAG8C,EAH9CA,SACAC,EAE8C,EAF9CA,QACAC,EAC8C,EAD9CA,KAEMlO,EAAUhB,GAAU,IAClBoE,EAAiCD,EAAjCC,WAAY+K,EAAqBhL,EAArBgL,iBACdC,EAAkBhL,EAAWL,QAAO,SAACF,GAAD,QAA4B,cAAdA,EAAOa,OAGzD2K,EAFeD,EAAgBE,QAAO,SAACC,EAAK1J,GAAN,OAAc0J,GAAO1J,EAAI2J,UAAY,EAAI,KAAI,GAEhD,GAAKJ,EAAgBtM,OAE9D,OAAOsM,EAAgBtM,OAAS,EAC9B,8BACE,cAAC2M,GAAA,EAAD,CACET,SAAUA,EACVjO,UAAWC,EAAQwN,eACnB9J,GApBG,sBAqBHuK,QAASA,EACTxD,KAAMyD,EACNQ,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAZhB,SAeE,sBAAK7O,UAAWC,EAAQwN,eAAxB,UACE,cAACsB,GAAA,EAAD,CAAY/O,UAAWC,EAAQyN,aAA/B,6BACA,qBAAK1N,UAAWC,EAAQ2N,KAAxB,SACGS,EAAgBtK,KAAI,SAACjB,GAAD,OACnB,cAACkM,GAAA,EAAD,CAEEC,QAAS,cAACjG,EAAA,EAAD,CAAU9E,MAAK,UAAKpB,EAAOa,IAAMyI,SAAUtJ,EAAO2L,WAAaH,IACxElK,MAAOtB,EAAOuB,OAAO,UACrB2D,QAASlF,EAAO2L,UAChBS,SAAU,kBAAMd,EAAiBtL,EAAOa,GAAIb,EAAO2L,aAJ9C3L,EAAOa,gBAWtB,KC7EN,IAAM1E,GAAYC,YAChBE,YAAa,CACXqO,eAAgB,CACd7N,QAAS,IAEXuP,mBAAoB,CAClB5P,SAAU,WACV2H,IAAK,GACLE,MAAO,IAETsG,aAAc,CACZhL,WAAY,IACZ9C,QAAS,gBACT+N,cAAe,aAEjBC,KAAM,CACJrE,QAAS,OACTsE,oBAAqB,mBACrB,4BAA6B,CAC3BA,oBAAqB,oBAEvBC,cAAe,GACfC,WAAY,IAEdqB,KAAM,CACJ5M,MAAO,OACP+G,QAAS,cACTC,cAAe,UAEjB6F,OAAQ,CACN9F,QAAS,WAYR,SAAS+F,GAAT,GAK+B,IAJpClM,EAImC,EAJnCA,SACA6K,EAGmC,EAHnCA,SACAC,EAEmC,EAFnCA,QACAC,EACmC,EADnCA,KAEMlO,EAAUhB,GAAU,IAClBoE,EAA8BD,EAA9BC,WAAYkM,EAAkBnM,EAAlBmM,cAEdC,EAAW9L,uBACf,SAACwJ,GACCA,EAAEuC,iBACFvB,MAEF,CAACA,IAGGwB,EAAehM,uBAAY,WAC/B6L,EAAc,MACb,CAACA,IAEJ,OACE,8BACE,cAACb,GAAA,EAAD,CACET,SAAUA,EACVtK,GAAI,kBACJuK,QAASA,EACTxD,KAAMyD,EACNQ,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAXhB,SAcE,sBAAK7O,UAAWC,EAAQwN,eAAxB,UACE,cAACsB,GAAA,EAAD,CAAY/O,UAAWC,EAAQyN,aAA/B,qBACA,uBAAM8B,SAAUA,EAAhB,UACE,cAACG,EAAA,EAAD,CAAQ3P,UAAWC,EAAQkP,mBAAoB/M,MAAM,UAAU8H,QAASwF,EAAxE,mBAGA,qBAAK1P,UAAWC,EAAQ2N,KAAxB,SACGvK,EACEL,QAAO,SAAC4M,GAAD,OAAQA,EAAGC,aAClB9L,KAAI,SAACjB,GAAD,OACH,qBAAqB9C,UAAWC,EAAQmP,KAAxC,SACGtM,EAAOuB,OAAO,WADPvB,EAAOa,SAKvB,cAACgM,EAAA,EAAD,CAAQ3P,UAAWC,EAAQoP,OAAQS,KAAM,SAAzC,4BCpFL,IAAM7Q,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACX2Q,QAAS,CACPxG,QAAS,OACTE,eAAgB,iBAElBuG,YAAa,GACbC,aAAc,GACdC,UAAW,CACT,kBAAmB,CACjB3I,YAAa,KAGjB4I,WAAY,CACVvQ,QAAS,GACT0H,UAAW,OACX9E,MAAO,GACPyE,OAAQ,GACR,iBAAkB,CAChBtE,aAAc,UA2CTyN,GAAgC,YAOC,IAAD,EAN3ChN,EAM2C,EAN3CA,SACAiN,EAK2C,EAL3CA,KACAnG,EAI2C,EAJ3CA,QACA9F,EAG2C,EAH3CA,MAG2C,IAF3CoG,eAE2C,MAFjC,kBAAM,GAE2B,EAD3CjG,EAC2C,EAD3CA,QAEMtE,EAAUhB,GAAU,IAC1B,OACE,cAAC2L,EAAA,EAAD,CAASC,MAAOzG,EAAOiI,aAAYjI,EAAnC,SACE,+BACE,cAAC0G,GAAA,EAAD,CACE9K,UAAW+K,KAAU,mBAClB9K,EAAQkQ,WAAyB,UAAZ5L,GADH,cAElBtE,EAAQiQ,UAAwB,SAAZ3L,GAFF,IAIrB2F,QAASA,EAAQ9G,GACjBgJ,UAAW5B,EAAQpH,GANrB,SAQGiN,SAOEC,GAAwB,SAAC,GAMH,IAAD,EALhCD,EAKgC,EALhCA,KACAnG,EAIgC,EAJhCA,QACA9F,EAGgC,EAHhCA,MAGgC,IAFhCoG,eAEgC,SADhCjG,EACgC,EADhCA,QAEMtE,EAAUhB,GAAU,IAC1B,OACE,cAAC2L,EAAA,EAAD,CAASC,MAAOzG,EAAOiI,aAAYjI,EAAnC,SACE,+BACE,cAAC0G,GAAA,EAAD,CACE9K,UAAW+K,KAAU,mBAClB9K,EAAQkQ,WAAyB,UAAZ5L,GADH,cAElBtE,EAAQiQ,UAAwB,SAAZ3L,GAFF,IAIrB2F,QAASA,EACTkC,UAAW5B,EANb,SAQG6F,SAcJ,SAASE,GAAT,GAK2D,IAJhEnN,EAI+D,EAJ/DA,SACAoN,EAG+D,EAH/DA,MACAlM,EAE+D,EAF/DA,SACAmM,EAC+D,EAD/DA,OAEQC,EAAYtN,EAAZsN,QACFzQ,EAAUhB,KAChB,EAAgCwL,wBAA8B7G,GAA9D,mBAAOqK,EAAP,KAAiB0C,EAAjB,KACA,EAAsClG,oBAAS,GAA/C,mBAAOmG,EAAP,KAAoBC,EAApB,KACA,EAAoCpG,oBAAS,GAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KACM1C,EAAkBqC,EAAQ1N,QAAO,SAACF,GAAD,QAA4B,cAAdA,EAAOa,OAEtDqN,EAAqBtN,uBACzB,SAACyI,GACCwE,EAAYxE,EAAM8E,eAClBJ,GAAe,KAEjB,CAACF,EAAaE,IAGVK,EAAoBxN,uBACxB,SAACyI,GACCwE,EAAYxE,EAAM8E,eAClBF,GAAc,KAEhB,CAACJ,EAAaI,IAGVI,EAAczN,uBAAY,WAC9BmN,GAAe,GACfE,GAAc,GACdJ,OAAY/M,KACX,IAGH,OACE,eAACwN,GAAA,EAAD,CAASpR,UAAWC,EAAQ8P,QAA5B,UACE,sBAAK/P,UAAWC,EAAQ+P,YAAxB,UACGQ,GACC,cAAC,GAAD,CACEpN,SAAUA,EACViN,KAAM,cAAC,KAAD,IACNnG,QAASsG,EACTpM,MAAM,MACNoG,QAAS,gBAAGhH,EAAH,EAAGA,MAAH,OACNA,EAAM6N,gBAA+D,IAA7CxN,OAAOC,KAAKN,EAAM6N,gBAAgBtP,QAE7DwC,QAAQ,SAGXkM,GACC,cAAC,GAAD,CACErN,SAAUA,EACViN,KAAM,cAAC,KAAD,IACNnG,QAASuG,EACTrM,MAAM,OACNoG,QAAS,gBAAGhH,EAAH,EAAGA,MAAH,OACPA,EAAM6N,gBAA+D,IAA7CxN,OAAOC,KAAKN,EAAM6N,gBAAgBtP,QAE5DwC,QAAQ,SAGXD,GACC,cAAC,GAAD,CACElB,SAAUA,EACViN,KAAM,cAAC,KAAD,IACNnG,QAAS5F,EACTF,MAAM,SACNoG,QAAS,gBAAGhH,EAAH,EAAGA,MAAH,OACPA,EAAM6N,gBAAkBxN,OAAOC,KAAKN,EAAM6N,gBAAgBtP,OAAS,GAErEwC,QAAQ,YAId,sBAAKvE,UAAWC,EAAQgQ,aAAxB,UACE,cAACjC,GAAD,CAAmB5K,SAAUA,EAAU8K,QAASiD,EAAahD,KAAMyC,EAAa3C,SAAUA,IAC1F,cAACqB,GAAD,CAAelM,SAAUA,EAAU8K,QAASiD,EAAahD,KAAM2C,EAAY7C,SAAUA,IACpFI,EAAgBtM,OAAS,GACxB,cAAC,GAAD,CACEsO,KAAM,cAAC,KAAD,IACNnG,QAAS8G,EACT5M,MAAM,sBACNG,QAAQ,UAGZ,cAAC,GAAD,CACE8L,KAAM,cAAC,KAAD,IACNnG,QAASgH,EACT9M,MAAM,oBACNG,QAAQ,gBC/NlB,IAAMtF,GAAYC,YAAW,CAC3BoS,UAAW,CACTC,aAAc,WACdC,SAAU,SACVC,WAAY,YAcHC,GAAsC,SAAC,GAAqC,IAAnC3L,EAAkC,EAAlCA,KAAkC,IAA5B4L,eAA4B,MAAlB5L,EAAkB,EAAZ6L,EAAY,EAAZA,MACpE3R,EAAUhB,GAAU,IAC1B,OACE,cAAC,IAAD,CAAY4L,MAAO8G,EAAS3R,UAAWC,EAAQqR,UAAWlI,MAAO,CAAEhD,UAAWwL,GAA9E,SACE,+BAAO7L,OCsCP8L,GAAkB,SAAlBA,EAAsDnB,GAApC,OACtBA,EAAQ,GAAGA,QAAUmB,EAAgBnB,EAAQ,GAAGA,SAAWA,EAAQ,IA8BrE,IAAMoB,GAAY,SAAC7F,GAAD,IAAsC2F,EAAtC,uDAA8C,OAA9C,MAAyD,CACzE3F,EACA,CACE7C,MAAO,CACLK,eAA0B,UAAVmI,EAAoB,WAAa,aACjDjI,WAAY,aACZJ,QAAS,WAkCTwI,GAAc,SAAoC9F,EAApC,OAAkDnJ,EAAlD,EAAkDA,OAAlD,OAClBgP,GAAU7F,EAAOnJ,GAAUA,EAAOkP,gBAAiBlP,GAAUA,EAAO8O,QAEhEK,GAAY,SAAoChG,EAApC,OAAkDmD,EAAlD,EAAkDA,KAAlD,OAChB0C,GAAU7F,EAAOmD,EAAKtM,QAAUsM,EAAKtM,OAAOkP,gBAAiB5C,EAAKtM,QAAUsM,EAAKtM,OAAO8O,QAEpFM,GAAgB,CACpBC,OA3EF,YAAsG,IAApCzB,EAAmC,EAAnCA,QAAS5N,EAA0B,EAA1BA,OACjEa,EAAuCb,EAAvCa,GAAIZ,EAAmCD,EAAnCC,YAAaO,EAAsBR,EAAtBQ,UAAWe,EAAWvB,EAAXuB,OACpC,EAA0BwE,IAAM4B,SAAS1H,GAAe,IAAxD,mBAAOmB,EAAP,KAAckO,EAAd,KAKAC,qBAAU,WACRD,EAASrP,GAAe,MACvB,CAACA,IAEJ,IAAMuP,EAAgBT,GAAgBnB,KAAa5N,EACnD,OACE,cAACyP,EAAA,EAAD,CACEC,KAAM7O,EACNS,MAAOC,EAAO,UACdoO,gBAAiB,CAAEC,QAAS/O,GAC5BO,MAAOA,EACPyO,UAAWL,EACX/N,QAAQ,WACR2K,SAjBiB,SAAC/C,GACpBiG,EAASjG,EAAMiB,OAAOlJ,QAiBpB0O,OAAQ,SAAC1F,GACP5J,EAAU4J,EAAEE,OAAOlJ,YAASN,OAsDlCiP,KDnI2D,SAAC,GAAD,IAAW3O,EAAX,EAAGkL,KAAQlL,MAAX,IAAoBpB,OAAU8O,aAA9B,MAAsC,OAAtC,SAC3D,cAAC,GAAD,CAAa7L,KAAM7B,EAAO0N,MAAOA,KCmIjCkB,OArFgD,SAAC,GAAD,IAAGhQ,EAAH,EAAGA,OAAH,OAChD,mCAAGA,EAAOa,GAAGoP,WAAW,KAAO,KAAOvR,EAAasB,EAAOa,OAsF1DqP,SAAU,GACVxQ,MAAO,IACPyQ,SAAU,KAGNC,GAAQ,CACZC,iBACAC,aACAC,aACAC,YACAC,cACAC,gBACAC,gBACAC,mBACAC,eAtDoB,SAACT,GACrBA,EAAM7P,WAAW9C,MAAK,SAACmQ,GAAD,OAEpB,CACE/M,GAAI,YACJqO,iBAAiB,EACjB4B,gBAAgB,EAChBZ,SAAU,GACVxQ,MAAO,GACPyQ,SAAU,GACVY,gBAAYjQ,EAGZkP,OAAQ,gBAAGgB,EAAH,EAAGA,8BAAH,OACN,cAAClL,GAAD,eAAoBkL,OAItBjB,KAAM,gBAAGlO,EAAH,EAAGA,IAAH,OAA6B,cAACsE,GAAD,eAAiBtE,EAAIoP,iCAjBtC,mBAmBjBrD,OAELwC,EAAMc,4BAA4BzT,MAAK,YAAsB,EAAnB0T,aAEE,GAAGC,QAAQ,GAChCC,WAAY,OAiC/BC,GAAc,CAClBC,UAAW7P,EACX8P,QAAStP,GAGJ,SAASuP,GAAyCtI,GACvD,IAAQuG,EAAoDvG,EAApDuG,KAAM9B,EAA8CzE,EAA9CyE,QAASF,EAAqCvE,EAArCuE,MAAOlM,EAA8B2H,EAA9B3H,SAAUmM,EAAoBxE,EAApBwE,OAAQvG,EAAY+B,EAAZ/B,QAC1CjK,EAAUhB,IAEhB,ECxKK,SAAyBuV,EAAaC,GAG3C,MAAsChK,oBAAS,WAC7C,IAEE,IAAMiK,EAAOC,OAAOC,aAAaC,QAAQL,GAEzC,OAAOE,EAAOI,KAAKC,MAAML,GAAQD,EACjC,MAAO3K,GAGP,OADAkL,QAAQC,IAAInL,GACL2K,MATX,mBAAOS,EAAP,KAAoBC,EAApB,KA8BA,MAAO,CAACD,EAfSxR,uBACf,SAACQ,GACC,IAEEiR,EAAejR,GAEfyQ,OAAOC,aAAaQ,QAAQZ,EAAKM,KAAKO,UAAUnR,IAChD,MAAO4F,GAEPkL,QAAQC,IAAInL,MAGhB,CAAC0K,KD0IqCc,CAAgB,cAAD,OAAe9C,GAAQ,IAA9E,mBAAO+C,EAAP,KAAqBC,EAArB,KACMpS,EAAWqS,WAAQ,WAAR,8BAEVxJ,GAFU,IAGbyE,UACA0D,eACAlC,iBACAqD,kBANa,OAQZrC,KAGGwC,EAA4EtS,EAA5EsS,cAAezB,EAA6D7Q,EAA7D6Q,aAAc0B,EAA+CvS,EAA/CuS,kBAAmBjK,EAA4BtI,EAA5BsI,KAAMkK,EAAsBxS,EAAtBwS,WACxDC,EEpLD,SAAqB3R,EAAY4R,GAEtC,MAA4CrL,mBAASvG,GAArD,mBAAO6R,EAAP,KAAuBC,EAAvB,KA2BA,OAzBA3D,qBACE,WAEE,IAAM4D,EAAUC,YAAW,WACzBF,EAAkB9R,KACjB4R,GAUH,OAAO,WACLK,aAAaF,MAMjB,CAAC/R,EAAO4R,IAGHC,EFuJgBK,CAD6DhT,EAAVI,MAChC,KAE1C6O,qBAAU,WACR,IAAQgE,EAA6DR,EAA7DQ,OAAQ9S,EAAqDsS,EAArDtS,QAASmJ,EAA4CmJ,EAA5CnJ,SAAU4J,EAAkCT,EAAlCS,eAAgBC,EAAkBV,EAAlBU,cAQnDf,EAPY,CACVa,SACA9S,UACAmJ,WACA4J,iBACAC,oBAGD,CAACf,EAAiBK,IAErB,IAAMW,EAAmB,SAACpH,GAAD,OAAmB,WAC1ClF,IAAYkF,EAAKtM,OAAO2T,YAAcrH,EAAKzK,IAAI8R,WAAgC,cAAnBrH,EAAKtM,OAAOa,IAAsBuG,EAAQkF,EAAKzK,OAG7G,EAA2C+Q,IAAfgB,GAA5B,EAAQC,KAAR,yBACA,OACE,qCACE,cAACpG,GAAD,CAAcnN,SAAUA,EAAgBoN,QAAOlM,WAAUmM,WACzD,cAACtN,EAAD,CAAkBC,SAAUA,IAC5B,eAAC,GAAD,2BAAgBsT,GAAhB,cACE,cAAC,GAAD,UACGzC,EAAalQ,KAAI,SAAC6S,GACjB,MAKIA,EAAYC,sBAJTC,EADP,EACEtC,IAGGqC,GAJL,EAEEhM,MAFF,EAGE8L,KAHF,uCAMA,OACE,cAAC,GAAD,2BAAuCE,GAAvC,aACGD,EAAY1C,QAAQnQ,KAAI,SAACjB,GACxB,IAAMsG,EAAQ,CACZhD,UAAWtD,EAAO8O,MAAQ9O,EAAO8O,MAAQ,SAE3C,EAAgE9O,EAAOiU,eAAehF,IAAzEiF,EAAb,EAAQxC,IAAqCuC,GAA7C,EAAwBJ,KAAxB,+BACA,EAA0D7T,EAAOmU,wBAAjE,IAAQpM,MAAOqM,OAAf,MAA4B,GAA5B,EAAmCC,EAAnC,yBACA,EAAwDrU,EAAOsU,uBAA/D,IAAQvM,MAAOwM,OAAf,MAA2B,GAA3B,EAAkCC,EAAlC,yBAEA,OACE,eAAC,GAAD,2BAAmCP,GAAnC,cACGjU,EAAOyU,YACN,cAAC3M,EAAA,EAAD,CAASC,MAAOqM,EAAhB,SACE,cAACM,EAAA,EAAD,yBACEC,QAAM,EACNnL,UAAWxJ,EAAO2T,UAAY,OAAS,MACvCiB,cAAeC,KACXR,GAJN,IAKEnX,UAAWC,EAAQuH,gBAIxB1E,EAAO8U,QACN,cAAChN,EAAA,EAAD,CAASC,MAAOwM,EAAhB,SACE,cAACG,EAAA,EAAD,yBACEC,OAAQ3U,EAAO+U,SACfvL,UAAWxJ,EAAOgV,aAAe,OAAS,OACtCR,GAHN,IAIEtX,UAAWC,EAAQoH,eACnB+B,MAAOA,EALT,SAOGtG,EAAOuB,OAAO,eAInB,cAAC,GAAD,CAAY+E,MAAOA,EAAnB,SAA2BtG,EAAOuB,OAAO,YAG1CvB,EAAOqR,WAAa,cAAC,GAAD,CAAcrR,OAAQA,OA5BzBkU,QAVPF,QA8CzB,cAAC,GAAD,2BAAenB,KAAf,aACGjK,EAAK3H,KAAI,SAACY,GACTiR,EAAWjR,GACX,MAAuDA,EAAIoT,cAA9CC,EAAb,EAAQxD,IAA+BuD,GAAvC,EAAqBpB,KAArB,+BACA,OACE,cAAC,GAAD,2BAEMoB,GAFN,IAGE/X,UAAWoI,IAAG,CAAE6P,YAAatT,EAAIuT,WAAYC,UAAWjO,IAH1D,SAKGvF,EAAIyT,MAAMrU,KAAI,SAACqL,GACd,MAA0DA,EAAKiJ,aAAapG,IAA/DqG,EAAb,EAAQ9D,IAAiC6D,GAAzC,EAAsB1B,KAAtB,+BACA,OACE,cAAC,GAAD,2BAA6B0B,GAA7B,IAA2CnO,QAASsM,EAAiBpH,GAArE,SACGA,EAAKqH,UACJ,qCACE,cAACe,EAAA,EAAD,yBACEvX,QAAS,CACPwH,iBAAkBxH,EAAQwH,iBAC1BE,kBAAmB1H,EAAQ0H,mBAE7B8P,QAAM,EACNnL,UAAW3H,EAAI4T,WAAa,OAAS,MACrCb,cAAec,KACX7T,EAAI8T,6BARV,IASEzY,UAAWC,EAAQ2H,YAClB,IACFwH,EAAK/K,OAAO,OAAQ,CAAEqU,UAAU,IAZnC,KAY+C/T,EAAIgU,QAAQ5W,OAZ3D,OAcEqN,EAAKwJ,aACPxJ,EAAK/K,OAAO,cACV+K,EAAKyJ,cAAgB,KACvBzJ,EAAK/K,OAAO,UAnBAiU,QAPfN,aAoCf,cAAC,GAAD,CAAoB5U,SAAUA,IAC9B,cAAC,GAAD,CAAYoH,SAAO,EAACpH,SAAUA,OG7RpC,SAAS0V,GAAkBrU,EAAuBd,EAAwBZ,GACxE,OAAO0B,EAAKzB,QAAO,SAAC2B,GAElB,OADiBA,EAAIC,OAAOjB,EAAG,KACZZ,KAQvB+V,GAAkBjU,WAAa,SAACC,GAAD,MAA6B,kBAARA,GAgCpD,IAAMiU,GAAY,SAACtU,EAAyBd,GAC1C,IAAIV,EAAMwB,EAAK1C,OAAS0C,EAAK,GAAGG,OAAOjB,GAAM,EACzCT,EAAMuB,EAAK1C,OAAS0C,EAAK,GAAGG,OAAOjB,GAAM,EAK7C,OAJAc,EAAKuU,SAAQ,SAACrU,GACZ1B,EAAMvC,KAAKuC,IAAI0B,EAAIC,OAAOjB,GAAKV,GAC/BC,EAAMxC,KAAKwC,IAAIyB,EAAIC,OAAOjB,GAAKT,MAE1B,CAACD,EAAKC,IAGf,SAAS+V,GAAT,GAE6B,IAAD,IAD1BnW,OAAUuB,EACgB,EADhBA,OAAQtB,EACQ,EADRA,YAAaO,EACL,EADKA,UAAW4V,EAChB,EADgBA,gBAAiBvV,EACjC,EADiCA,GAE3D,EAAmBkF,IAAMsQ,SAAQ,kBAAMJ,GAAUG,EAAiBvV,KAAK,CAACA,EAAIuV,IAA5E,mBAAOjW,EAAP,KAAYC,EAAZ,KAEA,OACE,sBACEkG,MAAO,CACLG,QAAS,OACTE,eAAgB,gBAChBE,WAAY,YAJhB,UAOE,cAAC4I,EAAA,EAAD,CACEC,KAAM7O,EACNS,MAAOC,EAAO,UACdyL,KAAK,QACLvC,WAAY,CACVtK,MACAC,OAEFgB,MAAOnB,GAAeE,EACtBiM,SAAU,SAAChC,GACT5J,EAAU8V,SAASlM,EAAEE,OAAOlJ,MAAO,QAGvC,cAACyL,EAAA,EAAD,CAAQpL,QAAQ,WAAW6E,MAAO,CAAE5G,MAAO,GAAIyE,OAAQ,IAAMiD,QAAS,kBAAM5G,OAAUM,IAAtF,oBAgFN,IAAM8M,GAAU,CACd,CACEoC,OAAQ,OACRpC,QAAS,CACP,CACEoC,OAAQ,aACRuG,SAAU,YACVC,UAAW,QACXzF,WAAY,gBAAW3P,EAAX,EAAGkL,KAAQlL,MAAX,gBAAmDA,EAAnD,YAEd,CACE4O,OAAQ,YACRuG,SAAU,WACVC,UAAW,cACXtW,OAAQ,YACR6Q,WAAY,gBAAW3P,EAAX,EAAGkL,KAAQlL,MAAX,gBAAmDA,EAAnD,qBAIlB,CACE4O,OAAQ,OACRpC,QAAS,CACP,CACEoC,OAAQ,MACRuG,SAAU,MACV7W,MAAO,GACPwQ,SAAU,GACVpB,MAAO,QACPO,OAAQ8G,GACRjW,OAAQ,SACRsW,UAAW,UACX1F,gBAAgB,EAChB2F,gBAAgB,EAChBC,eAAe,EACf3F,WAAY,gBAAW3P,EAAX,EAAGkL,KAAQlL,MAAX,gBAAmDA,EAAnD,YAEd,CACE4O,OAAQ,SACRuG,SAAU,SACV7W,MAAO,GACPwQ,SAAU,GACVpB,MAAO,QACPO,OA/FR,YAE6B,IAAD,IAD1BrP,OAC0B,IADhBC,mBACgB,MADF,GACE,EADEsB,EACF,EADEA,OAAQ6U,EACV,EADUA,gBAAiB5V,EAC3B,EAD2BA,UAAWK,EACtC,EADsCA,GAEhE,EAAmBkF,IAAMsQ,SAAQ,kBAAMJ,GAAUG,EAAiBvV,KAAK,CAACA,EAAIuV,IAA5E,mBAAOjW,EAAP,KAAYC,EAAZ,KACMuW,EAxBiB,WACvB,MAA4B5Q,IAAM4B,SAASiP,SAASC,eAApD,mBAAOlC,EAAP,KAAemC,EAAf,KAEMC,EAAgB,WACpBD,EAAUF,SAASC,gBAUrB,OAPA9Q,IAAMwJ,WAAU,WAEd,OADAqH,SAASI,iBAAiB,UAAWD,GAC9B,WACLH,SAASK,oBAAoB,UAAWF,MAEzC,IAEIpC,EAUgBuC,GACjBC,EAAWR,IAAmBA,EAAe9V,KAAf,UAAyBA,EAAzB,OAAmC8V,EAAe9V,KAAf,UAAyBA,EAAzB,OACvE,OACE,qCACE,cAACuW,EAAA,EAAD,CAAYxH,QAAS/O,EAAIwW,QAAM,EAACC,UAAWH,EAA3C,SACG5V,EAAO,YAEV,sBACE+E,MAAO,CACLG,QAAS,OACTE,eAAgB,gBAChBE,WAAY,WACZ0Q,WAAY,GALhB,UAQE,cAAC9H,EAAA,EAAD,CACE5O,GAAE,UAAKA,EAAL,MACFO,MAAOnB,EAAY,IAAM,GACzB+M,KAAK,SACLZ,SAAU,SAAChC,GACT,IAAMpI,EAAMoI,EAAEE,OAAOlJ,MACrBZ,GAAU,eAAC0H,EAAD,uDAAc,GAAd,MAAqB,CAAClG,EAAMsU,SAAStU,EAAK,SAAMlB,EAAWoH,EAAI,QAE3EsP,YAAW,eAAUrX,EAAV,KACXmG,MAAO,CACL5G,MAAO,OACPG,YAAa,YAnBnB,KAuBE,cAAC4P,EAAA,EAAD,CACE5O,GAAE,UAAKA,EAAL,MACFO,MAAOnB,EAAY,IAAM,GACzB+M,KAAK,SACLZ,SAAU,SAAChC,GACT,IAAMpI,EAAMoI,EAAEE,OAAOlJ,MACrBZ,GAAU,eAAC0H,EAAD,uDAAc,GAAd,MAAqB,CAACA,EAAI,GAAIlG,EAAMsU,SAAStU,EAAK,SAAMlB,OAEpE0W,YAAW,eAAUpX,EAAV,KACXkG,MAAO,CACL5G,MAAO,OACP+E,WAAY,mBAmDhBvE,OAAQ,UACRsW,UAAW,MACXzF,WAAY,gBAAW3P,EAAX,EAAGkL,KAAQlL,MAAX,gBAAmDA,EAAnD,cAEd,CACE4O,OAAQ,SACRuG,SAAU,SACVlH,OApMR,YAE6B,IAAD,IAD1BrP,OAAUC,EACgB,EADhBA,YAAasB,EACG,EADHA,OAAQf,EACL,EADKA,UAAW4V,EAChB,EADgBA,gBAAiBvV,EACjC,EADiCA,GAErD4W,EAAU1R,IAAMsQ,SAAQ,WAC5B,IAAMoB,EAAU,IAAIC,IAIpB,OAHAtB,EAAgBF,SAAQ,SAACrU,GACvB4V,EAAQE,IAAI9V,EAAIC,OAAOjB,OAElB,YAAI+W,MAAMC,KAAKJ,EAAQ3V,aAC7B,CAACjB,EAAIuV,IAER,OACE,eAAC3G,EAAA,EAAD,CACEqI,QAAM,EACNxW,MAAOC,EAAO,UACdH,MAAOnB,GAAe,GACtBmM,SAAU,SAAChC,GACT5J,EAAU4J,EAAEE,OAAOlJ,YAASN,IALhC,UAQE,cAACiX,EAAA,EAAD,CAAU3W,MAAO,GAAjB,iBACCqW,EAAQxW,KAAI,SAAC+W,EAAQxa,GAAT,OACX,cAACua,EAAA,EAAD,CAAkB3W,MAAO4W,EAAzB,SACGA,GADYxa,UA+Kf0C,OAAQ,YAEV,CACE8P,OAAQ,mBACRuG,SAAU,WACVlH,OAAQ8G,GACRjW,OAAQ8V,GACRQ,UArOR,SAAuB1U,GACrB,IAAI3B,EAAM2B,EAAO,IAAM,GACnB1B,EAAM0B,EAAO,IAAM,GAOvB,OALAA,EAAOoU,SAAQ,SAAC9U,GACdjB,EAAMvC,KAAKuC,IAAIA,EAAKiB,GACpBhB,EAAMxC,KAAKwC,IAAIA,EAAKgB,MAGfxD,KAAKqa,OAAO9X,EAAMC,GAAO,IA6N1B2Q,WAAY,gBAAW3P,EAAX,EAAGkL,KAAQlL,MAAX,gBAAmDA,EAAnD,eAkCL8W,GA5BO,WACpB,MAAenS,IAAM4B,UAAuB,kBjBrNvC,WAAoD,IAAD,uBAA9BwQ,EAA8B,yBAA9BA,EAA8B,gBASxD,OARsB,SAAhBC,IAA8C,IAA7BC,EAA4B,uDAApB,EACvB/a,EAAM6a,EAAKE,GACjB,OAAOhb,EAAMC,GAAK2D,KAAI,8BAAC,eAClBvD,KADiB,IAEpBmY,QAASsC,EAAKE,EAAQ,GAAKD,EAAcC,EAAQ,QAAKvX,OAInDsX,GiB4M2CE,CAAS,QAApDC,EAAP,oBAEMC,EAAQ5X,uBACZ,SAACN,GAAD,OAAyC,WACvC4R,QAAQC,IACN,WACA7R,EAASmY,iBAAiBxX,KAAI,SAACyX,GAAD,iBAAWA,EAAEC,SAAS7a,UAAtB,YAAmC4a,EAAEC,SAASxa,SAA9C,QAA2Dya,KAAK,UAGlG,IAGF,OACE,eAAC,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAAC,GAAD,CACEnJ,KAAM,YACN9B,QAASA,GACT2K,KAAMA,EACN7K,MAAO8K,EACP7K,OAAQ6K,EACRhX,SAAUgX,QCtQlBM,IAASvX,OACP,cAAC,IAAMwX,WAAP,UACE,cAAC,GAAD,MAEFnC,SAASoC,eAAe,W","file":"static/js/main.c99a5808.chunk.js","sourcesContent":["import { Theme } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport createStyles from '@material-ui/core/styles/createStyles'\nimport classNames from 'classnames'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      background: '#FFFFFF',\n      position: 'relative',\n      zIndex: 3,\n      margin: '10px 20px 0px',\n      borderRadius: '6px',\n      boxShadow:\n        '0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)',\n      padding: theme.spacing(3),\n    },\n  })\n)\n\ntype PageProps = {\n  className?: string\n}\n\nexport const Page: React.FC<PageProps> = ({ children, className }) => {\n  const classes = useStyles()\n  return <div className={classNames(classes.main, className)}>{children}</div>\n}\n","import namor from '@ggascoigne/namor'\n\nexport type Person = {\n  firstName: string\n  lastName: string\n  age: number\n  visits: number\n  progress: number\n  status: string\n}\n\nconst range = (len: number) => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst newPerson = (): Person => {\n  const statusChance = Math.random()\n  return {\n    firstName: namor.generate({ words: 1, saltLength: 0 }),\n    lastName: namor.generate({ words: 1, saltLength: 0, subset: 'manly' }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status: statusChance > 0.66 ? 'relationship' : statusChance > 0.33 ? 'complicated' : 'single',\n  }\n}\n\nexport type PersonData = Person & {\n  subRows?: PersonData[]\n}\n\nexport function makeData(...lens: number[]): PersonData[] {\n  const makeDataLevel = (depth = 0): PersonData[] => {\n    const len = lens[depth]\n    return range(len).map(() => ({\n      ...newPerson(),\n      subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n    }))\n  }\n\n  return makeDataLevel()\n}\n","// copied then trimmed from https://raw.githubusercontent.com/auth0/auth0.js/master/src/helper/object.js\n\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\n\nfunction camelToSnake(str: string) {\n  let newKey = ''\n  let index = 0\n  let code\n  let wasPrevNumber = true\n  let wasPrevUppercase = true\n\n  while (index < str.length) {\n    code = str.charCodeAt(index)\n    if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n      newKey += '_'\n      newKey += str[index].toLowerCase()\n    } else {\n      newKey += str[index].toLowerCase()\n    }\n    wasPrevNumber = code >= 48 && code <= 57\n    wasPrevUppercase = code >= 65 && code <= 90\n    index++\n  }\n\n  return newKey\n}\n\nfunction snakeToCamel(str: string) {\n  const parts = str.split('_')\n  return parts.reduce((p, c) => p + c.charAt(0).toUpperCase() + c.slice(1), parts.shift()!)\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function toSnakeCase(object: any, exceptions: string[] = []): any {\n  if (typeof object !== 'object' || object === null) {\n    return object\n  }\n\n  return Object.keys(object).reduce((p: { [key: string]: any }, key: string) => {\n    const newKey = exceptions.indexOf(key) === -1 ? camelToSnake(key) : key\n    p[newKey] = toSnakeCase(object[key])\n    return p\n  }, {})\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function toCamelCase(object: any, exceptions: string[] = []): any {\n  if (typeof object !== 'object' || object === null) {\n    return object\n  }\n\n  return Object.keys(object).reduce((p: { [key: string]: any }, key: string) => {\n    const newKey = exceptions.indexOf(key) === -1 ? snakeToCamel(key) : key\n    p[newKey] = toCamelCase(object[key])\n    return p\n  }, {})\n}\n\nexport function camelToWords(str: string): string {\n  let newKey = ''\n  let index = 0\n  let code\n  let wasPrevNumber = true\n  let wasPrevUppercase = true\n\n  while (index < str.length) {\n    code = str.charCodeAt(index)\n    if (index === 0) {\n      newKey += str[index].toUpperCase()\n    } else if ((!wasPrevUppercase && code >= 65 && code <= 90) || (!wasPrevNumber && code >= 48 && code <= 57)) {\n      newKey += ' '\n      newKey += str[index].toUpperCase()\n    } else {\n      newKey += str[index].toLowerCase()\n    }\n    wasPrevNumber = code >= 48 && code <= 57\n    wasPrevUppercase = code >= 65 && code <= 90\n    index++\n  }\n\n  return newKey\n}\n","import { Chip, createStyles, makeStyles } from '@material-ui/core'\nimport React, { ReactElement, useCallback } from 'react'\nimport { ColumnInstance, FilterValue, IdType, TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    filtersActiveLabel: {\n      color: '#998',\n      fontSize: '14px',\n      paddingRight: 10,\n    },\n    chipZone: {\n      padding: '18px 0 5px 10px',\n      width: '100%',\n    },\n    chipLabel: {\n      fontWeight: 500,\n      marginRight: 5,\n    },\n    filterChip: {\n      marginRight: 4,\n      color: '#222',\n    },\n  })\n)\n\ntype FilterChipBarProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n}\n\nconst getFilterValue = (column: ColumnInstance<any>, filterValue: FilterValue) => {\n  switch (column.filter) {\n    case 'between':\n      const min = filterValue[0]\n      const max = filterValue[1]\n      return min ? (max ? `${min}-${max}` : `>=${min}`) : `<=${max}`\n  }\n  return filterValue\n}\n\nexport function FilterChipBar<T extends Record<string, unknown>>({\n  instance,\n}: FilterChipBarProps<T>): ReactElement | null {\n  const classes = useStyles({})\n  const {\n    allColumns,\n    setFilter,\n    state: { filters },\n  } = instance\n  const handleDelete = useCallback(\n    (id: string | number) => {\n      setFilter(id as IdType<T>, undefined)\n    },\n    [setFilter]\n  )\n\n  return Object.keys(filters).length > 0 ? (\n    <div className={classes.chipZone}>\n      <span className={classes.filtersActiveLabel}>Active filters:</span>\n      {filters &&\n        allColumns.map((column) => {\n          const filter = filters.find((f) => f.id === column.id)\n          const value = filter && filter.value\n          return (\n            value && (\n              <Chip\n                className={classes.filterChip}\n                key={column.id}\n                label={\n                  <>\n                    <span className={classes.chipLabel}>{column.render('Header')}: </span>\n                    {getFilterValue(column, value)}\n                  </>\n                }\n                onDelete={() => handleDelete(column.id)}\n                variant='outlined'\n              />\n            )\n          )\n        })}\n    </div>\n  ) : null\n}\n","import { matchSorter } from 'match-sorter'\nimport { FilterValue, IdType, Row } from 'react-table'\n\nexport function fuzzyTextFilter<T extends Record<string, unknown>>(\n  rows: Array<Row<T>>,\n  id: IdType<T>,\n  filterValue: FilterValue\n): Array<Row<T>> {\n  return matchSorter(rows, filterValue, {\n    keys: [(row: Row<T>) => row.values[id]],\n  })\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilter.autoRemove = (val: any) => !val\n","import { FilterValue, IdType, Row } from 'react-table'\n\nconst regex = /([=<>!]*)\\s*((?:[0-9].?[0-9]*)+)/\n\nfunction parseValue(filterValue: FilterValue) {\n  // eslint-disable-next-line eqeqeq\n  const defaultComparator = (val: any) => val == filterValue\n  const tokens = regex.exec(filterValue)\n  if (!tokens) {\n    return defaultComparator\n  }\n  switch (tokens[1]) {\n    case '>':\n      return (val: any) => parseFloat(val) > parseFloat(tokens[2])\n    case '<':\n      return (val: any) => parseFloat(val) < parseFloat(tokens[2])\n    case '<=':\n      return (val: any) => parseFloat(val) <= parseFloat(tokens[2])\n    case '>=':\n      return (val: any) => parseFloat(val) >= parseFloat(tokens[2])\n    case '=':\n      return (val: any) => parseFloat(val) === parseFloat(tokens[2])\n    case '!':\n      return (val: any) => parseFloat(val) !== parseFloat(tokens[2])\n  }\n  return defaultComparator\n}\n\nexport function numericTextFilter<T extends Record<string, unknown>>(\n  rows: Array<Row<T>>,\n  id: IdType<T>,\n  filterValue: FilterValue\n): Array<Row<T>> {\n  const comparator = parseValue(filterValue)\n  return rows.filter((row) => comparator(row.values[id[0]]))\n}\n\n// Let the table remove the filter if the string is empty\nnumericTextFilter.autoRemove = (val: any) => !val\n","import { Checkbox, Theme, createStyles, makeStyles, styled } from '@material-ui/core'\nimport MuiTableTable from '@material-ui/core/Table'\nimport { TableTypeMap } from '@material-ui/core/Table/Table'\nimport MuiTableBody from '@material-ui/core/TableBody'\nimport { TableBodyTypeMap } from '@material-ui/core/TableBody/TableBody'\nimport MuiTableCell from '@material-ui/core/TableCell'\nimport { TableCellProps } from '@material-ui/core/TableCell/TableCell'\nimport MuiTableHead from '@material-ui/core/TableHead'\nimport { TableHeadTypeMap } from '@material-ui/core/TableHead/TableHead'\nimport MuiTableRow from '@material-ui/core/TableRow'\nimport { TableRowTypeMap } from '@material-ui/core/TableRow/TableRow'\nimport cx from 'classnames'\nimport React, { CSSProperties } from 'react'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    tableTable: {\n      borderSpacing: 0,\n      border: '1px solid rgba(224, 224, 224, 1)',\n      width: '100%',\n    },\n    tableHead: {},\n    tableHeadRow: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\n      '&:hover $resizeHandle': {\n        opacity: 1,\n      },\n    },\n    tableHeadCell: {\n      padding: '16px 1px 16px 16px',\n      fontSize: '0.875rem',\n      textAlign: 'left',\n      verticalAlign: 'inherit',\n      color: theme.palette.text.primary,\n      fontWeight: 500,\n      lineHeight: '1.5rem',\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\n      '&:last-child': {\n        borderRight: 'none',\n      },\n    },\n    tableBody: {},\n    tableRow: {\n      color: 'inherit',\n      outline: 0,\n      verticalAlign: 'middle',\n      '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.07)',\n      },\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\n      '&:last-child': {\n        borderBottom: 'none',\n      },\n      '&.rowSelected': {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n        '&:hover': {\n          backgroundColor: 'rgba(0, 0, 0, 0.07)',\n        },\n      },\n      '&.clickable': {\n        cursor: 'pointer',\n      },\n    },\n    tableLabel: {},\n    tableCell: {\n      padding: '8px 16px',\n      fontSize: '0.875rem',\n      textAlign: 'left',\n      fontWeight: 300,\n      lineHeight: 1.3,\n      verticalAlign: 'inherit',\n      color: theme.palette.text.primary,\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\n      '&:last-child': {\n        borderRight: 'none',\n      },\n    },\n    resizeHandle: {\n      position: 'absolute',\n      cursor: 'col-resize',\n      zIndex: 100,\n      opacity: 0,\n      borderLeft: `1px solid ${theme.palette.primary.light}`,\n      borderRight: `1px solid ${theme.palette.primary.light}`,\n      height: '50%',\n      top: '25%',\n      transition: 'all linear 100ms',\n      right: -2,\n      width: 3,\n      '&.handleActive': {\n        opacity: 1,\n        border: 'none',\n        backgroundColor: theme.palette.primary.light,\n        height: 'calc(100% - 4px)',\n        top: '2px',\n        right: -1,\n        width: 1,\n      },\n    },\n    tableSortLabel: {\n      '& svg': {\n        width: 16,\n        height: 16,\n        marginTop: 0,\n        marginLeft: 2,\n      },\n    },\n    headerIcon: {\n      '& svg': {\n        width: 16,\n        height: 16,\n        marginTop: 4,\n        marginRight: 0,\n      },\n    },\n    iconDirectionAsc: {\n      transform: 'rotate(90deg)',\n    },\n    iconDirectionDesc: {\n      transform: 'rotate(180deg)',\n    },\n    cellIcon: {\n      '& svg': {\n        width: 16,\n        height: 16,\n        marginTop: 3,\n      },\n    },\n  })\n)\n\nconst areEqual = (prevProps: any, nextProps: any) =>\n  prevProps.checked === nextProps.checked && prevProps.indeterminate === nextProps.indeterminate\n\ntype CN = { className?: string; style?: CSSProperties }\n\nexport const TableTable: React.FC<Partial<TableTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableTable className={cx(className, classes.tableTable)} {...rest}>\n      {children}\n    </MuiTableTable>\n  )\n}\n\nexport const TableBody: React.FC<Partial<TableBodyTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableBody className={cx(className, classes.tableBody)} {...rest}>\n      {children}\n    </MuiTableBody>\n  )\n}\n\nexport const TableHead: React.FC<Partial<TableHeadTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableHead className={cx(className, classes.tableHead)} {...rest}>\n      {children}\n    </MuiTableHead>\n  )\n}\n\nexport const TableHeadRow: React.FC<Partial<TableRowTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableRow className={cx(className, classes.tableHeadRow)} {...rest}>\n      {children}\n    </MuiTableRow>\n  )\n}\n\nexport const TableHeadCell: React.FC<Partial<TableCellProps> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableCell className={cx(className, classes.tableHeadCell)} {...rest}>\n      {children}\n    </MuiTableCell>\n  )\n}\n\nexport const TableRow: React.FC<Partial<TableRowTypeMap> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableRow className={cx(className, classes.tableRow)} {...rest}>\n      {children}\n    </MuiTableRow>\n  )\n}\n\nexport const TableCell: React.FC<Partial<TableCellProps> & CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <MuiTableCell className={cx(className, classes.tableCell)} {...rest}>\n      {children}\n    </MuiTableCell>\n  )\n}\n\nexport const TableLabel: React.FC<CN> = ({ children, className, ...rest }) => {\n  const classes = useStyles()\n  return (\n    <div className={cx(className, classes.tableLabel)} {...rest}>\n      {children}\n    </div>\n  )\n}\n\nexport const HeaderCheckbox = React.memo(\n  styled(Checkbox)({\n    fontSize: '1rem',\n    margin: '-8px 0 -8px -15px',\n    padding: '8px 9px',\n    '& svg': {\n      width: '24px',\n      height: '24px',\n    },\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  }),\n  areEqual\n)\n\nexport const RowCheckbox = React.memo(\n  styled(Checkbox)({\n    fontSize: '14px',\n    margin: '-9px 0 -8px -15px',\n    padding: '5px 9px',\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    '& svg': {\n      width: 24,\n      height: 24,\n    },\n  }),\n  areEqual\n)\n","import cx from 'classnames'\nimport React, { ReactElement } from 'react'\nimport { ColumnInstance } from 'react-table'\n\nimport { useStyles } from './TableStyles'\n\nexport const ResizeHandle = <T extends Record<string, unknown>>({\n  column,\n}: {\n  column: ColumnInstance<T>\n}): ReactElement => {\n  const classes = useStyles()\n  return (\n    <div\n      {...column.getResizerProps()}\n      style={{ cursor: 'col-resize' }} // override the useResizeColumns default\n      className={cx({\n        [classes.resizeHandle]: true,\n        handleActive: column.isResizing,\n      })}\n    />\n  )\n}\n","import { Theme } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      flex: '1 0 auto',\n    },\n    progress: {\n      margin: theme.spacing(2),\n    },\n  })\n)\n\ninterface LoaderProps {\n  error?: boolean\n  retry?: (event: React.MouseEvent<HTMLElement>) => void\n  timedOut?: boolean\n  pastDelay?: boolean\n}\n\nexport const Loader: React.FC<LoaderProps> = ({ error, retry, timedOut, pastDelay }) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      {error && (\n        <div>\n          Error! <button onClick={retry}>Retry</button>\n        </div>\n      )}\n      {timedOut && (\n        <div>\n          Taking a long time... <button onClick={retry}>Retry</button>\n        </div>\n      )}\n      {pastDelay && <div>Loading...</div>}\n      <CircularProgress className={classes.progress} />\n    </div>\n  )\n}\n","import { IconButton, Tooltip, createStyles, makeStyles } from '@material-ui/core'\nimport BugReportTwoToneIcon from '@material-ui/icons/BugReportTwoTone'\nimport classnames from 'classnames'\nimport React, { Suspense, useState } from 'react'\n\nimport { Loader } from '../Loader'\n\nconst ReactJson = React.lazy(() => import('react-json-view'))\n\nconst useStyles = makeStyles(\n  createStyles({\n    button: {\n      marginTop: -72,\n      marginLeft: 0,\n    },\n  })\n)\n\nexport const TableDebug: React.FC<{\n  enabled: boolean\n  instance: any\n}> = ({ enabled, instance }) => {\n  const [open, setOpen] = useState(false)\n  const classes = useStyles()\n\n  return enabled ? (\n    <>\n      <Tooltip title={'Debug'}>\n        <span>\n          <IconButton\n            className={classnames({ [classes.button]: instance?.rows?.length })}\n            onClick={() => setOpen((old) => !old)}\n          >\n            <BugReportTwoToneIcon />\n          </IconButton>\n        </span>\n      </Tooltip>\n      {open && (\n        <>\n          <br />\n          <br />\n          <Suspense fallback={<Loader />}>\n            <ReactJson src={{ ...instance }} collapsed={1} indentWidth={2} sortKeys />\n          </Suspense>\n        </>\n      )}\n    </>\n  ) : null\n}\n","import { TablePagination as _MuiTablePagination } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Theme, createStyles, makeStyles, useTheme } from '@material-ui/core/styles'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\nimport React, { PropsWithChildren, ReactElement, useCallback } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst rowsPerPageOptions = [10, 25, 50]\n\n// avoid all of the redraws caused by the internal withStyles\nconst interestingPropsEqual = (prevProps: any, nextProps: any) =>\n  prevProps.count === nextProps.count &&\n  prevProps.rowsPerPage === nextProps.rowsPerPage &&\n  prevProps.page === nextProps.page &&\n  prevProps.onChangePage === nextProps.onChangePage &&\n  prevProps.onChangeRowsPerPage === nextProps.onChangeRowsPerPage\n\n// a bit of a type hack to keep OverridableComponent working as desired\ntype T = typeof _MuiTablePagination\nconst MuiTablePagination: T = React.memo(_MuiTablePagination, interestingPropsEqual) as T\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  })\n)\n\ninterface TablePaginationActionsProps {\n  count: number\n  page: number\n  rowsPerPage: number\n  onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void\n}\n\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label='first page'>\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label='previous page'>\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nexport function TablePagination<T extends Record<string, unknown>>({\n  instance,\n}: PropsWithChildren<{ instance: TableInstance<T> }>): ReactElement | null {\n  const {\n    state: { pageIndex, pageSize, rowCount = instance.rows.length },\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n  } = instance\n\n  const handleChangePage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage: number) => {\n      if (newPage === pageIndex + 1) {\n        nextPage()\n      } else if (newPage === pageIndex - 1) {\n        previousPage()\n      } else {\n        gotoPage(newPage)\n      }\n    },\n    [gotoPage, nextPage, pageIndex, previousPage]\n  )\n\n  const onChangeRowsPerPage = useCallback(\n    (e) => {\n      setPageSize(Number(e.target.value))\n    },\n    [setPageSize]\n  )\n\n  return rowCount ? (\n    <MuiTablePagination\n      rowsPerPageOptions={rowsPerPageOptions}\n      component='div'\n      count={rowCount}\n      rowsPerPage={pageSize}\n      page={pageIndex}\n      SelectProps={{\n        inputProps: { 'aria-label': 'rows per page' },\n        // native: true,\n      }}\n      onChangePage={handleChangePage}\n      onChangeRowsPerPage={onChangeRowsPerPage}\n      ActionsComponent={TablePaginationActions}\n    />\n  ) : null\n}\n","import { Checkbox, FormControlLabel, Popover, Typography, createStyles, makeStyles } from '@material-ui/core'\nimport React, { ReactElement } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 198px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 160px)',\n      },\n      gridColumnGap: 6,\n      gridRowGap: 6,\n    },\n  })\n)\n\ntype ColumnHidePageProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n}\n\nconst id = 'popover-column-hide'\n\nexport function ColumnHidePage<T extends Record<string, unknown>>({\n  instance,\n  anchorEl,\n  onClose,\n  show,\n}: ColumnHidePageProps<T>): ReactElement | null {\n  const classes = useStyles({})\n  const { allColumns, toggleHideColumn } = instance\n  const hideableColumns = allColumns.filter((column) => !(column.id === '_selector'))\n  const checkedCount = hideableColumns.reduce((acc, val) => acc + (val.isVisible ? 0 : 1), 0)\n\n  const onlyOneOptionLeft = checkedCount + 1 >= hideableColumns.length\n\n  return hideableColumns.length > 1 ? (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        className={classes.columnsPopOver}\n        id={id}\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Visible Columns</Typography>\n          <div className={classes.grid}>\n            {hideableColumns.map((column) => (\n              <FormControlLabel\n                key={column.id}\n                control={<Checkbox value={`${column.id}`} disabled={column.isVisible && onlyOneOptionLeft} />}\n                label={column.render('Header')}\n                checked={column.isVisible}\n                onChange={() => toggleHideColumn(column.id, column.isVisible)}\n              />\n            ))}\n          </div>\n        </div>\n      </Popover>\n    </div>\n  ) : null\n}\n","import { Button, Popover, Typography, createStyles, makeStyles } from '@material-ui/core'\nimport React, { FormEvent, ReactElement, useCallback } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    filtersResetButton: {\n      position: 'absolute',\n      top: 18,\n      right: 21,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 218px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 180px)',\n      },\n      gridColumnGap: 24,\n      gridRowGap: 24,\n    },\n    cell: {\n      width: '100%',\n      display: 'inline-flex',\n      flexDirection: 'column',\n    },\n    hidden: {\n      display: 'none',\n    },\n  })\n)\n\ntype FilterPageProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n}\n\nexport function FilterPage<T extends Record<string, unknown>>({\n  instance,\n  anchorEl,\n  onClose,\n  show,\n}: FilterPageProps<T>): ReactElement {\n  const classes = useStyles({})\n  const { allColumns, setAllFilters } = instance\n\n  const onSubmit = useCallback(\n    (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault()\n      onClose()\n    },\n    [onClose]\n  )\n\n  const resetFilters = useCallback(() => {\n    setAllFilters([])\n  }, [setAllFilters])\n\n  return (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        id={'popover-filters'}\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Filters</Typography>\n          <form onSubmit={onSubmit}>\n            <Button className={classes.filtersResetButton} color='primary' onClick={resetFilters}>\n              Reset\n            </Button>\n            <div className={classes.grid}>\n              {allColumns\n                .filter((it) => it.canFilter)\n                .map((column) => (\n                  <div key={column.id} className={classes.cell}>\n                    {column.render('Filter')}\n                  </div>\n                ))}\n            </div>\n            <Button className={classes.hidden} type={'submit'}>\n              &nbsp;\n            </Button>\n          </form>\n        </div>\n      </Popover>\n    </div>\n  )\n}\n","import { Button, IconButton, Theme, Toolbar, Tooltip, createStyles, makeStyles } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport CreateIcon from '@material-ui/icons/CreateOutlined'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport ViewColumnsIcon from '@material-ui/icons/ViewColumn'\nimport classnames from 'classnames'\nimport React, { MouseEvent, MouseEventHandler, PropsWithChildren, ReactElement, useCallback, useState } from 'react'\nimport { TableInstance } from 'react-table'\n\nimport { TableMouseEventHandler } from '../../types/react-table-config'\nimport { ColumnHidePage } from './ColumnHidePage'\nimport { FilterPage } from './FilterPage'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    leftButtons: {},\n    rightButtons: {},\n    leftIcons: {\n      '&:first-of-type': {\n        marginLeft: -12,\n      },\n    },\n    rightIcons: {\n      padding: 12,\n      marginTop: '-6px',\n      width: 48,\n      height: 48,\n      '&:last-of-type': {\n        marginRight: -12,\n      },\n    },\n  })\n)\n\ntype InstanceActionButton<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  icon?: JSX.Element\n  onClick: TableMouseEventHandler\n  enabled?: (instance: TableInstance<T>) => boolean\n  label: string\n  variant?: 'right' | 'left'\n}\n\ntype ActionButton = {\n  icon?: JSX.Element\n  onClick: MouseEventHandler\n  enabled?: boolean\n  label: string\n  variant?: 'right' | 'left'\n}\n\nexport const InstanceLabeledActionButton = <T extends Record<string, unknown>>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true,\n}: InstanceActionButton<T>): ReactElement => (\n  <Button variant='contained' color='primary' onClick={onClick(instance)} disabled={!enabled(instance)}>\n    {icon}\n    {label}\n  </Button>\n)\n\nexport const LabeledActionButton = ({ icon, onClick, label, enabled = true }: ActionButton): ReactElement => (\n  <Button variant='contained' color='primary' onClick={onClick} disabled={!enabled}>\n    {icon}\n    {label}\n  </Button>\n)\n\nexport const InstanceSmallIconActionButton = <T extends Record<string, unknown>>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true,\n  variant,\n}: InstanceActionButton<T>): ReactElement => {\n  const classes = useStyles({})\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left',\n          })}\n          onClick={onClick(instance)}\n          disabled={!enabled(instance)}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport const SmallIconActionButton = ({\n  icon,\n  onClick,\n  label,\n  enabled = true,\n  variant,\n}: ActionButton): ReactElement => {\n  const classes = useStyles({})\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left',\n          })}\n          onClick={onClick}\n          disabled={!enabled}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\ntype TableToolbarProps<T extends Record<string, unknown>> = {\n  instance: TableInstance<T>\n  onAdd?: TableMouseEventHandler\n  onDelete?: TableMouseEventHandler\n  onEdit?: TableMouseEventHandler\n}\n\nexport function TableToolbar<T extends Record<string, unknown>>({\n  instance,\n  onAdd,\n  onDelete,\n  onEdit,\n}: PropsWithChildren<TableToolbarProps<T>>): ReactElement | null {\n  const { columns } = instance\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>(undefined)\n  const [columnsOpen, setColumnsOpen] = useState(false)\n  const [filterOpen, setFilterOpen] = useState(false)\n  const hideableColumns = columns.filter((column) => !(column.id === '_selector'))\n\n  const handleColumnsClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget)\n      setColumnsOpen(true)\n    },\n    [setAnchorEl, setColumnsOpen]\n  )\n\n  const handleFilterClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget)\n      setFilterOpen(true)\n    },\n    [setAnchorEl, setFilterOpen]\n  )\n\n  const handleClose = useCallback(() => {\n    setColumnsOpen(false)\n    setFilterOpen(false)\n    setAnchorEl(undefined)\n  }, [])\n\n  // toolbar with add, edit, delete, filter/search column select.\n  return (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.leftButtons}>\n        {onAdd && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<AddIcon />}\n            onClick={onAdd}\n            label='Add'\n            enabled={({ state }: TableInstance<T>) =>\n              !state.selectedRowIds || Object.keys(state.selectedRowIds).length === 0\n            }\n            variant='left'\n          />\n        )}\n        {onEdit && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<CreateIcon />}\n            onClick={onEdit}\n            label='Edit'\n            enabled={({ state }: TableInstance<T>) =>\n              state.selectedRowIds && Object.keys(state.selectedRowIds).length === 1\n            }\n            variant='left'\n          />\n        )}\n        {onDelete && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<DeleteIcon />}\n            onClick={onDelete}\n            label='Delete'\n            enabled={({ state }: TableInstance<T>) =>\n              state.selectedRowIds && Object.keys(state.selectedRowIds).length > 0\n            }\n            variant='left'\n          />\n        )}\n      </div>\n      <div className={classes.rightButtons}>\n        <ColumnHidePage<T> instance={instance} onClose={handleClose} show={columnsOpen} anchorEl={anchorEl} />\n        <FilterPage<T> instance={instance} onClose={handleClose} show={filterOpen} anchorEl={anchorEl} />\n        {hideableColumns.length > 1 && (\n          <SmallIconActionButton\n            icon={<ViewColumnsIcon />}\n            onClick={handleColumnsClick}\n            label='Show / hide columns'\n            variant='right'\n          />\n        )}\n        <SmallIconActionButton\n          icon={<FilterListIcon />}\n          onClick={handleFilterClick}\n          label='Filter by columns'\n          variant='right'\n        />\n      </div>\n    </Toolbar>\n  )\n}\n","import { Tooltip as MuiTooltip, makeStyles } from '@material-ui/core'\nimport React, { CSSProperties } from 'react'\nimport { CellProps } from 'react-table'\n\nconst useStyles = makeStyles({\n  truncated: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n})\n\nexport const TooltipCellRenderer: React.FC<CellProps<any>> = ({ cell: { value }, column: { align = 'left' } }) => (\n  <TooltipCell text={value} align={align} />\n)\n\ninterface TooltipProps {\n  text: string\n  tooltip?: string\n  align: string\n}\n\nexport const TooltipCell: React.FC<TooltipProps> = ({ text, tooltip = text, align }) => {\n  const classes = useStyles({})\n  return (\n    <MuiTooltip title={tooltip} className={classes.truncated} style={{ textAlign: align } as CSSProperties}>\n      <span>{text}</span>\n    </MuiTooltip>\n  )\n}\n","import { TableSortLabel, TextField, Tooltip } from '@material-ui/core'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp'\nimport cx from 'classnames'\nimport React, { CSSProperties, MouseEventHandler, PropsWithChildren, ReactElement, useEffect } from 'react'\nimport {\n  Cell,\n  CellProps,\n  ColumnInstance,\n  FilterProps,\n  HeaderGroup,\n  HeaderProps,\n  Hooks,\n  Meta,\n  Row,\n  TableInstance,\n  TableOptions,\n  useColumnOrder,\n  useExpanded,\n  useFilters,\n  useFlexLayout,\n  useGroupBy,\n  usePagination,\n  useResizeColumns,\n  useRowSelect,\n  useSortBy,\n  useTable,\n} from 'react-table'\n\nimport { camelToWords, useDebounce, useLocalStorage } from '../utils'\nimport { FilterChipBar } from './FilterChipBar'\nimport { fuzzyTextFilter, numericTextFilter } from './filters'\nimport { ResizeHandle } from './ResizeHandle'\nimport { TableDebug } from './TableDebug'\nimport { TablePagination } from './TablePagination'\nimport {\n  HeaderCheckbox,\n  RowCheckbox,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeadCell,\n  TableHeadRow,\n  TableLabel,\n  TableRow,\n  TableTable,\n  useStyles,\n} from './TableStyles'\nimport { TableToolbar } from './TableToolbar'\nimport { TooltipCellRenderer } from './TooltipCell'\n\nexport interface TableProperties<T extends Record<string, unknown>> extends TableOptions<T> {\n  name: string\n  onAdd?: (instance: TableInstance<T>) => MouseEventHandler\n  onDelete?: (instance: TableInstance<T>) => MouseEventHandler\n  onEdit?: (instance: TableInstance<T>) => MouseEventHandler\n  onClick?: (row: Row<T>) => void\n}\n\nconst DefaultHeader: React.FC<HeaderProps<any>> = ({ column }) => (\n  <>{column.id.startsWith('_') ? null : camelToWords(column.id)}</>\n)\n\n// yes this is recursive, but the depth never exceeds three so it seems safe enough\nconst findFirstColumn = <T extends Record<string, unknown>>(columns: Array<ColumnInstance<T>>): ColumnInstance<T> =>\n  columns[0].columns ? findFirstColumn(columns[0].columns) : columns[0]\n\nfunction DefaultColumnFilter<T extends Record<string, unknown>>({ columns, column }: FilterProps<T>) {\n  const { id, filterValue, setFilter, render } = column\n  const [value, setValue] = React.useState(filterValue || '')\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value)\n  }\n  // ensure that reset loads the new value\n  useEffect(() => {\n    setValue(filterValue || '')\n  }, [filterValue])\n\n  const isFirstColumn = findFirstColumn(columns) === column\n  return (\n    <TextField\n      name={id}\n      label={render('Header')}\n      InputLabelProps={{ htmlFor: id }}\n      value={value}\n      autoFocus={isFirstColumn}\n      variant='standard'\n      onChange={handleChange}\n      onBlur={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    />\n  )\n}\n\nconst getStyles = (props: any, disableResizing = false, align = 'left') => [\n  props,\n  {\n    style: {\n      justifyContent: align === 'right' ? 'flex-end' : 'flex-start',\n      alignItems: 'flex-start',\n      display: 'flex',\n    },\n  },\n]\n\nconst selectionHook = (hooks: Hooks<any>) => {\n  hooks.allColumns.push((columns) => [\n    // Let's make a column for selection\n    {\n      id: '_selector',\n      disableResizing: true,\n      disableGroupBy: true,\n      minWidth: 45,\n      width: 45,\n      maxWidth: 45,\n      Aggregated: undefined,\n      // The header can use the table's getToggleAllRowsSelectedProps method\n      // to render a checkbox\n      Header: ({ getToggleAllRowsSelectedProps }: HeaderProps<any>) => (\n        <HeaderCheckbox {...getToggleAllRowsSelectedProps()} />\n      ),\n      // The cell can use the individual row's getToggleRowSelectedProps method\n      // to the render a checkbox\n      Cell: ({ row }: CellProps<any>) => <RowCheckbox {...row.getToggleRowSelectedProps()} />,\n    },\n    ...columns,\n  ])\n  hooks.useInstanceBeforeDimensions.push(({ headerGroups }) => {\n    // fix the parent group of the selection button to not be resizable\n    const selectionGroupHeader = headerGroups[0].headers[0]\n    selectionGroupHeader.canResize = false\n  })\n}\n\nconst headerProps = <T extends Record<string, unknown>>(props: any, { column }: Meta<T, { column: HeaderGroup<T> }>) =>\n  getStyles(props, column && column.disableResizing, column && column.align)\n\nconst cellProps = <T extends Record<string, unknown>>(props: any, { cell }: Meta<T, { cell: Cell<T> }>) =>\n  getStyles(props, cell.column && cell.column.disableResizing, cell.column && cell.column.align)\n\nconst defaultColumn = {\n  Filter: DefaultColumnFilter,\n  Cell: TooltipCellRenderer,\n  Header: DefaultHeader,\n  // When using the useFlexLayout:\n  minWidth: 30, // minWidth is only used as a limit for resizing\n  width: 150, // width is used for both the flex-basis and flex-grow\n  maxWidth: 200, // maxWidth is only used as a limit for resizing\n}\n\nconst hooks = [\n  useColumnOrder,\n  useFilters,\n  useGroupBy,\n  useSortBy,\n  useExpanded,\n  useFlexLayout,\n  usePagination,\n  useResizeColumns,\n  useRowSelect,\n  selectionHook,\n]\n\nconst filterTypes = {\n  fuzzyText: fuzzyTextFilter,\n  numeric: numericTextFilter,\n}\n\nexport function Table<T extends Record<string, unknown>>(props: PropsWithChildren<TableProperties<T>>): ReactElement {\n  const { name, columns, onAdd, onDelete, onEdit, onClick } = props\n  const classes = useStyles()\n\n  const [initialState, setInitialState] = useLocalStorage(`tableState:${name}`, {})\n  const instance = useTable<T>(\n    {\n      ...props,\n      columns,\n      filterTypes,\n      defaultColumn,\n      initialState,\n    },\n    ...hooks\n  )\n\n  const { getTableProps, headerGroups, getTableBodyProps, page, prepareRow, state } = instance\n  const debouncedState = useDebounce(state, 500)\n\n  useEffect(() => {\n    const { sortBy, filters, pageSize, columnResizing, hiddenColumns } = debouncedState\n    const val = {\n      sortBy,\n      filters,\n      pageSize,\n      columnResizing,\n      hiddenColumns,\n    }\n    setInitialState(val)\n  }, [setInitialState, debouncedState])\n\n  const cellClickHandler = (cell: Cell<T>) => () => {\n    onClick && !cell.column.isGrouped && !cell.row.isGrouped && cell.column.id !== '_selector' && onClick(cell.row)\n  }\n\n  const { role: tableRole, ...tableProps } = getTableProps()\n  return (\n    <>\n      <TableToolbar instance={instance} {...{ onAdd, onDelete, onEdit }} />\n      <FilterChipBar<T> instance={instance} />\n      <TableTable {...tableProps}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => {\n            const {\n              key: headerGroupKey,\n              title: headerGroupTitle,\n              role: headerGroupRole,\n              ...getHeaderGroupProps\n            } = headerGroup.getHeaderGroupProps()\n            return (\n              <TableHeadRow key={headerGroupKey} {...getHeaderGroupProps}>\n                {headerGroup.headers.map((column) => {\n                  const style = {\n                    textAlign: column.align ? column.align : 'left ',\n                  } as CSSProperties\n                  const { key: headerKey, role: headerRole, ...getHeaderProps } = column.getHeaderProps(headerProps)\n                  const { title: groupTitle = '', ...columnGroupByProps } = column.getGroupByToggleProps()\n                  const { title: sortTitle = '', ...columnSortByProps } = column.getSortByToggleProps()\n\n                  return (\n                    <TableHeadCell key={headerKey} {...getHeaderProps}>\n                      {column.canGroupBy && (\n                        <Tooltip title={groupTitle}>\n                          <TableSortLabel\n                            active\n                            direction={column.isGrouped ? 'desc' : 'asc'}\n                            IconComponent={KeyboardArrowRight}\n                            {...columnGroupByProps}\n                            className={classes.headerIcon}\n                          />\n                        </Tooltip>\n                      )}\n                      {column.canSort ? (\n                        <Tooltip title={sortTitle}>\n                          <TableSortLabel\n                            active={column.isSorted}\n                            direction={column.isSortedDesc ? 'desc' : 'asc'}\n                            {...columnSortByProps}\n                            className={classes.tableSortLabel}\n                            style={style}\n                          >\n                            {column.render('Header')}\n                          </TableSortLabel>\n                        </Tooltip>\n                      ) : (\n                        <TableLabel style={style}>{column.render('Header')}</TableLabel>\n                      )}\n                      {/*<div>{column.canFilter ? column.render('Filter') : null}</div>*/}\n                      {column.canResize && <ResizeHandle column={column} />}\n                    </TableHeadCell>\n                  )\n                })}\n              </TableHeadRow>\n            )\n          })}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row)\n            const { key: rowKey, role: rowRole, ...getRowProps } = row.getRowProps()\n            return (\n              <TableRow\n                key={rowKey}\n                {...getRowProps}\n                className={cx({ rowSelected: row.isSelected, clickable: onClick })}\n              >\n                {row.cells.map((cell) => {\n                  const { key: cellKey, role: cellRole, ...getCellProps } = cell.getCellProps(cellProps)\n                  return (\n                    <TableCell key={cellKey} {...getCellProps} onClick={cellClickHandler(cell)}>\n                      {cell.isGrouped ? (\n                        <>\n                          <TableSortLabel\n                            classes={{\n                              iconDirectionAsc: classes.iconDirectionAsc,\n                              iconDirectionDesc: classes.iconDirectionDesc,\n                            }}\n                            active\n                            direction={row.isExpanded ? 'desc' : 'asc'}\n                            IconComponent={KeyboardArrowUp}\n                            {...row.getToggleRowExpandedProps()}\n                            className={classes.cellIcon}\n                          />{' '}\n                          {cell.render('Cell', { editable: false })} ({row.subRows.length})\n                        </>\n                      ) : cell.isAggregated ? (\n                        cell.render('Aggregated')\n                      ) : cell.isPlaceholder ? null : (\n                        cell.render('Cell')\n                      )}\n                    </TableCell>\n                  )\n                })}\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </TableTable>\n      <TablePagination<T> instance={instance} />\n      <TableDebug enabled instance={instance} />\n    </>\n  )\n}\n","// credits to https://usehooks.com/useLocalStorage/\n\nimport { useCallback, useState } from 'react'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useLocalStorage(key: string, initialValue: any) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = useCallback(\n    (value: any) => {\n      try {\n        // Save state\n        setStoredValue(value)\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(value))\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error)\n      }\n    },\n    [key]\n  )\n\n  return [storedValue, setValue]\n}\n","// credit to https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\n\nimport { useEffect, useState } from 'react'\n\n// Our hook\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useDebounce(value: any, delay: number): any {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  )\n\n  return debouncedValue\n}\n","import { Button, CssBaseline, InputLabel, MenuItem, TextField } from '@material-ui/core'\nimport React, { useCallback } from 'react'\nimport { CellProps, FilterProps, FilterValue, IdType, Row, TableInstance } from 'react-table'\n\nimport { Page } from './Page'\nimport { Table } from './Table'\nimport { PersonData, makeData } from './utils'\n\n// This is a custom aggregator that\n// takes in an array of values and\n// returns the rounded median\nfunction roundedMedian(values: any[]) {\n  let min = values[0] || ''\n  let max = values[0] || ''\n\n  values.forEach((value) => {\n    min = Math.min(min, value)\n    max = Math.max(max, value)\n  })\n\n  return Math.round((min + max) / 2)\n}\n\nfunction filterGreaterThan(rows: Array<Row<any>>, id: Array<IdType<any>>, filterValue: FilterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id[0]]\n    return rowValue >= filterValue\n  })\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = (val: any) => typeof val !== 'number'\n\nfunction SelectColumnFilter({\n  column: { filterValue, render, setFilter, preFilteredRows, id },\n}: FilterProps<PersonData>) {\n  const options = React.useMemo(() => {\n    const options = new Set<any>()\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id])\n    })\n    return [...Array.from(options.values())]\n  }, [id, preFilteredRows])\n\n  return (\n    <TextField\n      select\n      label={render('Header')}\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <MenuItem value={''}>All</MenuItem>\n      {options.map((option, i) => (\n        <MenuItem key={i} value={option}>\n          {option}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nconst getMinMax = (rows: Row<PersonData>[], id: IdType<PersonData>) => {\n  let min = rows.length ? rows[0].values[id] : 0\n  let max = rows.length ? rows[0].values[id] : 0\n  rows.forEach((row) => {\n    min = Math.min(row.values[id], min)\n    max = Math.max(row.values[id], max)\n  })\n  return [min, max]\n}\n\nfunction SliderColumnFilter({\n  column: { render, filterValue, setFilter, preFilteredRows, id },\n}: FilterProps<PersonData>) {\n  const [min, max] = React.useMemo(() => getMinMax(preFilteredRows, id), [id, preFilteredRows])\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'baseline',\n      }}\n    >\n      <TextField\n        name={id}\n        label={render('Header')}\n        type='range'\n        inputProps={{\n          min,\n          max,\n        }}\n        value={filterValue || min}\n        onChange={(e) => {\n          setFilter(parseInt(e.target.value, 10))\n        }}\n      />\n      <Button variant='outlined' style={{ width: 60, height: 36 }} onClick={() => setFilter(undefined)}>\n        Off\n      </Button>\n    </div>\n  )\n}\n\nconst useActiveElement = () => {\n  const [active, setActive] = React.useState(document.activeElement)\n\n  const handleFocusIn = () => {\n    setActive(document.activeElement)\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('focusin', handleFocusIn)\n    return () => {\n      document.removeEventListener('focusin', handleFocusIn)\n    }\n  }, [])\n\n  return active\n}\n\n// This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\nfunction NumberRangeColumnFilter({\n  column: { filterValue = [], render, preFilteredRows, setFilter, id },\n}: FilterProps<PersonData>) {\n  const [min, max] = React.useMemo(() => getMinMax(preFilteredRows, id), [id, preFilteredRows])\n  const focusedElement = useActiveElement()\n  const hasFocus = focusedElement && (focusedElement.id === `${id}_1` || focusedElement.id === `${id}_2`)\n  return (\n    <>\n      <InputLabel htmlFor={id} shrink focused={!!hasFocus}>\n        {render('Header')}\n      </InputLabel>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'baseline',\n          paddingTop: 5,\n        }}\n      >\n        <TextField\n          id={`${id}_1`}\n          value={filterValue[0] || ''}\n          type='number'\n          onChange={(e) => {\n            const val = e.target.value\n            setFilter((old: any[] = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n          }}\n          placeholder={`Min (${min})`}\n          style={{\n            width: '70px',\n            marginRight: '0.5rem',\n          }}\n        />\n        to\n        <TextField\n          id={`${id}_2`}\n          value={filterValue[1] || ''}\n          type='number'\n          onChange={(e) => {\n            const val = e.target.value\n            setFilter((old: any[] = []) => [old[0], val ? parseInt(val, 10) : undefined])\n          }}\n          placeholder={`Max (${max})`}\n          style={{\n            width: '70px',\n            marginLeft: '0.5rem',\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\nconst columns = [\n  {\n    Header: 'Name',\n    columns: [\n      {\n        Header: 'First Name',\n        accessor: 'firstName',\n        aggregate: 'count',\n        Aggregated: ({ cell: { value } }: CellProps<PersonData>) => `${value} Names`,\n      },\n      {\n        Header: 'Last Name',\n        accessor: 'lastName',\n        aggregate: 'uniqueCount',\n        filter: 'fuzzyText',\n        Aggregated: ({ cell: { value } }: CellProps<PersonData>) => `${value} Unique Names`,\n      },\n    ],\n  },\n  {\n    Header: 'Info',\n    columns: [\n      {\n        Header: 'Age',\n        accessor: 'age',\n        width: 50,\n        minWidth: 50,\n        align: 'right',\n        Filter: SliderColumnFilter,\n        filter: 'equals',\n        aggregate: 'average',\n        disableGroupBy: true,\n        defaultCanSort: false,\n        disableSortBy: false,\n        Aggregated: ({ cell: { value } }: CellProps<PersonData>) => `${value} (avg)`,\n      },\n      {\n        Header: 'Visits',\n        accessor: 'visits',\n        width: 50,\n        minWidth: 50,\n        align: 'right',\n        Filter: NumberRangeColumnFilter,\n        filter: 'between',\n        aggregate: 'sum',\n        Aggregated: ({ cell: { value } }: CellProps<PersonData>) => `${value} (total)`,\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n        Filter: SelectColumnFilter,\n        filter: 'includes',\n      },\n      {\n        Header: 'Profile Progress',\n        accessor: 'progress',\n        Filter: SliderColumnFilter,\n        filter: filterGreaterThan,\n        aggregate: roundedMedian,\n        Aggregated: ({ cell: { value } }: CellProps<PersonData>) => `${value} (med)`,\n      },\n    ],\n  },\n] //.flatMap((c:any)=>c.columns) // remove comment to drop header groups\n\nconst App: React.FC = () => {\n  const [data] = React.useState<PersonData[]>(() => makeData(100))\n\n  const dummy = useCallback(\n    (instance: TableInstance<PersonData>) => () => {\n      console.log(\n        'Selected',\n        instance.selectedFlatRows.map((v) => `'${v.original.firstName} ${v.original.lastName}'`).join(', ')\n      )\n    },\n    []\n  )\n\n  return (\n    <Page>\n      <CssBaseline />\n      <Table<PersonData>\n        name={'testTable'}\n        columns={columns}\n        data={data}\n        onAdd={dummy}\n        onEdit={dummy}\n        onDelete={dummy}\n      />\n    </Page>\n  )\n}\n\nexport default App\n","// import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// Hot Module Replacement (HMR) - Remove this snippet to remove HMR.\n// Learn more: https://www.snowpack.dev/#hot-module-replacement\n// if (import.meta.hot) {\n//   import.meta.hot.accept();\n// }\n"],"sourceRoot":""}